name: Loteca Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Ajuste aqui a rodada e o concurso quando quiser
      LOTECA_RODADA: "2025-09-20_21"
      LOTECA_CONCURSO: "1213"

      RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          echo "pandas
          numpy
          pyyaml
          requests
          scikit-learn
          wandb
          lxml
          feedparser
          selectolax" > requirements.txt
          pip install -r requirements.txt

      # Detecta automaticamente a pasta dos scripts
      - name: Detect scripts dir (auto)
        shell: bash
        run: |
          set -e
          FOUND="$(find . -maxdepth 4 -type f -name 'ingest_fixtures_odds.py' | head -n 1 || true)"
          if [ -z "$FOUND" ]; then
            echo "ERRO: não encontrei ingest_fixtures_odds.py"; exit 2
          fi
          DIR="$(dirname "$FOUND")"
          echo "SCRIPTS_DIR=$DIR" >> "$GITHUB_ENV"
          echo "Usando SCRIPTS_DIR=$DIR"

      - name: Check RAPIDAPI_KEY (safe)
        shell: bash
        run: |
          set -e
          if [ -z "${RAPIDAPI_KEY:-}" ]; then
            echo "ERRO: RAPIDAPI_KEY ausente no ambiente."; exit 2
          fi
          case "$RAPIDAPI_KEY" in
            *$'\n'*|*$'\r'*|*$'\t'*)
              echo "ERRO: RAPIDAPI_KEY contém quebra de linha/tab. Edite o Secret p/ 1 linha."; exit 2;;
          esac
          echo "OK: RAPIDAPI_KEY limpa (len=$(printf %s "$RAPIDAPI_KEY" | wc -c))"

      - name: Ingest fixtures & odds (fixtures)
        run: |
          python "$SCRIPTS_DIR/ingest_fixtures_odds.py" --rodada "${{ env.LOTECA_RODADA }}"

      - name: Ingest odds (1X2, de-vig, sanity)
        run: |
          if [ -f "$SCRIPTS_DIR/ingest_odds.py" ]; then
            python "$SCRIPTS_DIR/ingest_odds.py" --rodada "${{ env.LOTECA_RODADA }}"
          else
            echo "WARN: ingest_odds.py não encontrado; pulando."
          fi

      - name: Ingest standings
        run: |
          if [ -f "$SCRIPTS_DIR/ingest_standings.py" ]; then
            python "$SCRIPTS_DIR/ingest_standings.py" --rodada "${{ env.LOTECA_RODADA }}"
          else
            echo "WARN: ingest_standings.py não encontrado; pulando."
          fi

      - name: Ingest weather (Open-Meteo)
        run: |
          if [ -f "$SCRIPTS_DIR/ingest_weather.py" ]; then
            python "$SCRIPTS_DIR/ingest_weather.py" --rodada "${{ env.LOTECA_RODADA }}"
          else
            echo "WARN: ingest_weather.py não encontrado; pulando."
          fi

      - name: Ingest availability (lineups + injuries)
        run: |
          if [ -f "$SCRIPTS_DIR/ingest_availability.py" ]; then
            python "$SCRIPTS_DIR/ingest_availability.py" --rodada "${{ env.LOTECA_RODADA }}"
          else
            echo "WARN: ingest_availability.py não encontrado; pulando."
          fi

      - name: Join & context score
        run: |
          if [ -f "$SCRIPTS_DIR/join_features.py" ]; then
            python "$SCRIPTS_DIR/join_features.py" --rodada "${{ env.LOTECA_RODADA }}"
          else
            echo "WARN: join_features.py não encontrado; pulando."
          fi

      # >>> GERA O VOLANTE EM FORMATO LOTECA (Markdown), SEM CSV <<<
      - name: Make Volante (formato Loteca)
        run: |
          if [ -f "$SCRIPTS_DIR/make_volante.py" ]; then
            python "$SCRIPTS_DIR/make_volante.py" \
              --rodada "${{ env.LOTECA_RODADA }}" \
              --duplos 4 \
              --triplos 0 \
              --concurso "${{ env.LOTECA_CONCURSO }}"
          else
            echo "ERRO: make_volante.py não encontrado em $SCRIPTS_DIR"; exit 2
          fi

      # Imprime o volante no log do Actions (para você ver sem baixar nada)
      - name: Mostrar Volante no log
        shell: bash
        run: |
          set -e
          VOL_MD="reports/volante_concurso_${{ env.LOTECA_CONCURSO }}.md"
          if [ ! -f "$VOL_MD" ]; then
            VOL_MD="reports/volante_${{ env.LOTECA_RODADA }}.md"
          fi
          echo "================= VOLANTE (Markdown) ================="
          cat "$VOL_MD" || (echo "Volante não encontrado"; exit 2)
          echo "======================================================"

      - name: Upload reports (inclui o volante .md)
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ env.LOTECA_RODADA }}
          path: |
            reports/
            data/processed/
            data/raw/rodada_${{ env.LOTECA_RODADA }}/
