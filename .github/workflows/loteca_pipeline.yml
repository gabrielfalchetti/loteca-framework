name: Loteca Pipeline

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LOTECA_RODADA: "2025-09-20_21"

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Diagnóstico rápido (mostrar pastas e tentar achar arquivos)
        run: |
          echo "PWD=$(pwd)"
          echo "Pastas até 3 níveis:"
          find . -maxdepth 3 -type d -print
          echo "Procurando ingest_matches.py:"
          find . -maxdepth 7 -type f -name "ingest_matches.py" -print
          echo "Procurando scorecard.py:"
          find . -maxdepth 7 -type f -name "scorecard.py" -print

      - name: Detectar pasta dos scripts (auto)
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          for base in scripts pipeline/scripts src/loteca_framework/scripts ; do
            if [[ -f "$base/ingest_matches.py" && -f "$base/scorecard.py" ]]; then
              echo "SCRIPTS_DIR=$base" >> "$GITHUB_ENV"
              echo "Encontrado em: $base"
              exit 0
            fi
          done
          echo "NÃO ENCONTREI os dois arquivos (ingest_matches.py e scorecard.py)."
          echo "Crie-os (ou mova-os) e rode novamente."
          exit 2

      - name: Validar estrutura mínima
        run: |
          python -c "import os,sys,pathlib; base=os.environ.get('SCRIPTS_DIR',''); \
p1=pathlib.Path(base)/'ingest_matches.py'; p2=pathlib.Path(base)/'scorecard.py'; \
miss=[str(p) for p in (p1,p2) if not p.exists()]; \
print(f'[OK] Achei: {p1} e {p2}') if not miss else (print('[ERRO] Arquivos faltando:\\n - ' + '\\n - '.join(miss)) or sys.exit(2))"

      - name: Rodar ingest e scorecard
        run: |
          python "$SCRIPTS_DIR/ingest_matches.py" --rodada "${{ env.LOTECA_RODADA }}"
          python "$SCRIPTS_DIR/scorecard.py" --rodada "${{ env.LOTECA_RODADA }}"
