name: Loteca Pipeline

on:
  workflow_dispatch:
    inputs:
      rodada:
        description: "Identificador da rodada (ex.: 2025-09-20_21)"
        required: true
        type: string

jobs:
  build-loteca:
    runs-on: ubuntu-latest
    env:
      LOTECA_RODADA: ${{ inputs.rodada }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pandas requests rapidfuzz==3.9.7

      # 1) GERA matches.csv a partir do matches_source.csv
      - name: Ingest matches (gera data/out/<RODADA>/matches.csv)
        run: |
          python scripts/ingest_matches.py --rodada "${LOTECA_RODADA}"
          test -s "data/out/${LOTECA_RODADA}/matches.csv" || { echo "::error::matches.csv ausente/vazio"; exit 2; }
          echo "Prévia matches.csv:" && head -n 5 "data/out/${LOTECA_RODADA}/matches.csv" || true

      # 2) Coleta ODDS reais
      - name: Ingest odds (TheOddsAPI - real)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          if [ -z "${ODDS_API_KEY}" ]; then
            echo "::error::ODDS_API_KEY não definido nos Secrets."; exit 2;
          fi
          python scripts/ingest_odds.py \
            --rodada "${LOTECA_RODADA}" \
            --sport soccer_brazil_campeonato \
            --regions uk,eu,us,au \
            --market h2h \
            --min-match 80 \
            --allow-partial \
            --dump-api \
            --print-map
          test -s "data/out/${LOTECA_RODADA}/odds.csv" || { echo "::error::odds.csv ausente/vazio"; exit 2; }
          echo "Prévia odds.csv:" && head -n 10 "data/out/${LOTECA_RODADA}/odds.csv" || true

      # 3) Constrói features
      - name: Build features
        run: |
          python scripts/build_features.py --rodada "${LOTECA_RODADA}"
          test -s "data/out/${LOTECA_RODADA}/features.csv" || { echo "::error::features.csv ausente/vazio"; exit 2; }
          echo "Prévia features.csv:" && head -n 5 "data/out/${LOTECA_RODADA}/features.csv" || true

      # 4) Junta tudo
      - name: Join features
        run: |
          python scripts/join_features.py --rodada "${LOTECA_RODADA}"
          test -s "data/out/${LOTECA_RODADA}/joined.csv" || { echo "::error::joined.csv ausente/vazio"; exit 2; }
          echo "Prévia joined.csv:" && head -n 5 "data/out/${LOTECA_RODADA}/joined.csv" || true

      # 5) Publica artefato
      - name: Upload joined
        uses: actions/upload-artifact@v4
        with:
          name: joined-${{ env.LOTECA_RODADA }}
          path: data/out/${{ env.LOTECA_RODADA }}/joined.csv
