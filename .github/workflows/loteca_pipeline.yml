name: Loteca Pipeline

on:
  workflow_dispatch:
    inputs:
      rodada:
        description: "Identificador da rodada (ex.: 2025-09-20_21)"
        required: true
        type: string

jobs:
  build-loteca:
    runs-on: ubuntu-latest
    env:
      LOTECA_RODADA: ${{ inputs.rodada }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pandas requests rapidfuzz==3.9.7

      # 1) Gera matches.csv a partir do seu matches_source.csv
      - name: Ingest matches
        run: |
          python scripts/ingest_matches.py --rodada "${LOTECA_RODADA}"
          test -s "data/out/${LOTECA_RODADA}/matches.csv" || { echo "::error::matches.csv ausente/vazio"; exit 2; }
          echo "Prévia matches.csv:" && head -n 10 "data/out/${LOTECA_RODADA}/matches.csv" || true

      # 2) Coleta odds REAIS por liga e salva com nomes diferentes
      - name: Ingest odds Brasil (Serie A)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python scripts/ingest_odds.py \
            --rodada "${LOTECA_RODADA}" \
            --sport soccer_brazil_campeonato \
            --regions uk,eu,us,au \
            --market h2h \
            --min-match 80 \
            --allow-partial \
            --dump-api \
            --print-map
          mv "data/out/${LOTECA_RODADA}/odds.csv" "data/out/${LOTECA_RODADA}/odds_br.csv" || true

      - name: Ingest odds Inglaterra (EPL)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python scripts/ingest_odds.py \
            --rodada "${LOTECA_RODADA}" \
            --sport soccer_epl \
            --regions uk,eu,us,au \
            --market h2h \
            --min-match 80 \
            --allow-partial
          mv "data/out/${LOTECA_RODADA}/odds.csv" "data/out/${LOTECA_RODADA}/odds_epl.csv" || true

      - name: Ingest odds Espanha (La Liga)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python scripts/ingest_odds.py \
            --rodada "${LOTECA_RODADA}" \
            --sport soccer_spain_la_liga \
            --regions uk,eu,us,au \
            --market h2h \
            --min-match 80 \
            --allow-partial
          mv "data/out/${LOTECA_RODADA}/odds.csv" "data/out/${LOTECA_RODADA}/odds_esp.csv" || true

      # 3) Mescla as odds num único odds.csv (sem usar heredoc, para evitar erros de YAML)
      - name: Merge odds files
        run: |
          set -e
          BASE="data/out/${LOTECA_RODADA}"
          OUT="${BASE}/odds.csv"
          TMP="${BASE}/odds_tmp.csv"
          : > "${OUT}"
          for f in "${BASE}/odds_br.csv" "${BASE}/odds_epl.csv" "${BASE}/odds_esp.csv"; do
            if [ -s "$f" ]; then
              if [ ! -s "${OUT}" ]; then
                cp "$f" "${OUT}"
              else
                tail -n +2 "$f" >> "${OUT}"
              fi
            fi
          done
          # Deduplifica por match_id (1ª coluna) preservando cabeçalho
          if [ -s "${OUT}" ]; then
            IFS=, read -r HEADER < "${OUT}"
            echo "${HEADER}" > "${TMP}"
            awk -F, 'NR>1 && !seen[$1]++ { print }' "${OUT}" >> "${TMP}"
            mv "${TMP}" "${OUT}"
          fi
          test -s "${OUT}" || { echo "::error::odds.csv ausente/vazio após merge"; exit 2; }
          echo "Prévia odds.csv:" && head -n 10 "${OUT}" || true

      # 4) Constrói features
      - name: Build features
        run: |
          python scripts/build_features.py --rodada "${LOTECA_RODADA}"
          test -s "data/out/${LOTECA_RODADA}/features.csv" || { echo "::error::features.csv ausente/vazio"; exit 2; }
          head -n 5 "data/out/${LOTECA_RODADA}/features.csv" || true

      # 5) Junta tudo
      - name: Join features
        run: |
          python scripts/join_features.py --rodada "${LOTECA_RODADA}"
          test -s "data/out/${LOTECA_RODADA}/joined.csv" || { echo "::error::joined.csv ausente/vazio"; exit 2; }
          head -n 5 "data/out/${LOTECA_RODADA}/joined.csv" || true

      # 6) Publica artefato
      - name: Upload joined
        uses: actions/upload-artifact@v4
        with:
          name: joined-${{ env.LOTECA_RODADA }}
          path: data/out/${{ env.LOTECA_RODADA }}/joined.csv
