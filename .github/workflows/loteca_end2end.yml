name: Loteca End2End

on:
  workflow_dispatch:
    inputs:
      rodada:
        description: "Identificador da rodada (ex.: 2025-09-27_1213)"
        required: true
        type: string
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  end2end:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy requests scikit-learn scipy matplotlib tqdm wandb joblib
          fi

      - name: Hotfix merge inseguro
        shell: bash
        run: |
          python scripts/patch_merge_hotfix.py || true

      - name: Preparar entrada
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          mkdir -p "data/in/$RODADA" "data/out/$RODADA" "artifacts/$RODADA"
          FILE="data/in/$RODADA/matches_source.csv"
          if [ ! -f "$FILE" ]; then
            printf 'match_id,home,away,date\n1,Time A,Time B,2025-09-27\n2,Time C,Time D,2025-09-27\n' > "$FILE"
            echo "Criado: $FILE"
          else
            echo "Entrada OK: $FILE"
          fi

      # ===================== W&B (opcional) =====================
      - name: Weights and Biases login
        if: ${{ secrets.WANDB_API_KEY != '' }}
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        shell: bash
        run: |
          python -m wandb login "${WANDB_API_KEY}" --relogin || true
          echo "[wandb] login executado"

      # ===================== ODDS =====================
      - name: Coletar odds TheOddsAPI (auto)
        if: ${{ secrets.THEODDSAPI_KEY != '' }}
        env:
          THEODDSAPI_KEY: ${{ secrets.THEODDSAPI_KEY }}
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          python scripts/ingest_odds_theoddsapi.py --rodada "$RODADA" --regions "uk,eu,us,au" --debug || true
          if [ -f "data/out/$RODADA/theoddsapi_debug.json" ]; then
            echo "---- theoddsapi_debug.json (head) ----"
            head -c 4000 "data/out/$RODADA/theoddsapi_debug.json" || true
            echo ""
          fi

      - name: Coletar odds API-Football (RapidAPI BR)
        if: ${{ secrets.RAPIDAPI_KEY != '' }}
        env:
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          python scripts/ingest_odds_apifootball_rapidapi.py --rodada "$RODADA" --season 2025 --window 14 --fuzzy 0.9 --debug

      - name: Consolidar odds (consenso)
        env:
          THEODDSAPI_KEY: ${{ secrets.THEODDSAPI_KEY }}
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          python scripts/ingest_odds.py --rodada "$RODADA"

      # ===================== FEATURE ENGINEERING / xG =====================
      - name: Gerar features base
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/join_features.py ]; then
            python scripts/join_features.py --rodada "$RODADA"
          else
            echo "AVISO: scripts/join_features.py não encontrado — pulando."
          fi

      - name: Calcular xG
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/compute_xg.py ]; then
            python scripts/compute_xg.py --rodada "$RODADA" --out "data/out/$RODADA/xg.csv"
          else
            echo "AVISO: scripts/compute_xg.py não encontrado — pulando."
          fi

      # ===================== TREINO BASE =====================
      - name: Treinar modelos base
        env:
          WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/train_model.py ]; then
            python scripts/train_model.py --rodada "$RODADA" --wandb_project "${WANDB_PROJECT}"
          else
            echo "AVISO: scripts/train_model.py não encontrado — pulando."
          fi

      # ===================== CALIBRAÇÃO ISOTÔNICA =====================
      - name: Calibração isotônica 1X2
        env:
          WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/calibrate_isotonic.py ]; then
            python scripts/calibrate_isotonic.py --rodada "$RODADA" \
              --in "data/out/$RODADA/preds_base.csv" \
              --out "data/out/$RODADA/preds_calibrated.csv" \
              --wandb_project "${WANDB_PROJECT}"
          else
            echo "AVISO: scripts/calibrate_isotonic.py não encontrado — pulando."
          fi

      # ===================== STACKING BIVARIADO =====================
      - name: Stacking bivariado
        env:
          WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/stack_bivariate.py ]; then
            python scripts/stack_bivariate.py --rodada "$RODADA" \
              --in "data/out/$RODADA/preds_calibrated.csv" \
              --out "data/out/$RODADA/preds_bivar.csv" \
              --wandb_project "${WANDB_PROJECT}"
          else
            echo "AVISO: scripts/stack_bivariate.py não encontrado — pulando."
          fi

      # ===================== BUILD PROBABILITIES =====================
      - name: Build probabilities
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/build_probabilities.py ]; then
            python scripts/build_probabilities.py --rodada "$RODADA" \
              --in "data/out/$RODADA/preds_bivar.csv" \
              --odds "data/out/$RODADA/odds.csv" \
              --out "data/out/$RODADA/probabilities.csv"
          else
            echo "AVISO: scripts/build_probabilities.py não encontrado — pulando."
          fi

      # ===================== EVALUATE RISK =====================
      - name: Evaluate risk e edge
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/evaluate_risk.py ]; then
            python scripts/evaluate_risk.py --rodada "$RODADA" \
              --probs "data/out/$RODADA/probabilities.csv" \
              --odds "data/out/$RODADA/odds.csv" \
              --out "data/out/$RODADA/risk_report.csv"
          else
            echo "AVISO: scripts/evaluate_risk.py não encontrado — pulando."
          fi

      # ===================== SCORECARD / RELATÓRIO =====================
      - name: Scorecard relatório
        shell: bash
        run: |
          RODADA="${{ github.event.inputs.rodada }}"
          if [ -z "$RODADA" ]; then RODADA='2025-09-27_1213'; fi
          if [ -f scripts/scorecard.py ]; then
            python scripts/scorecard.py --rodada "$RODADA" --out "data/out/$RODADA/scorecard.html"
          else
            echo "AVISO: scripts/scorecard.py não encontrado — pulando."
          fi

      # ===================== EXPORT/ARTIFACTS =====================
      - name: Exportar artefatos
        uses: actions/upload-artifact@v4
        with:
          name: loteca_${{ github.event.inputs.rodada }}
          path: |
            data/out/${{ github.event.inputs.rodada }}/odds*.csv
            data/out/${{ github.event.inputs.rodada }}/theoddsapi_debug.json
            data/out/${{ github.event.inputs.rodada }}/*.csv
            data/out/${{ github.event.inputs.rodada }}/*.html
            artifacts/${{ github.event.inputs.rodada }}/**
