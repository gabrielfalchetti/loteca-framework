name: end2end

on:
  workflow_dispatch:
    inputs:
      RODADA:
        description: "ID da rodada (ex.: 2025-10-05_1214)"
        required: true
        default: "2025-10-05_1214"
      SEASON:
        description: "Ano da temporada (opcional, ex.: 2025)"
        required: false
        default: "2025"
      REGIONS:
        description: "Regiões do TheOddsAPI"
        required: false
        default: "uk,eu,us,au"
      DEBUG:
        description: "Ativar logs de debug? true/false"
        required: false
        default: "true"

permissions:
  contents: read

env:
  RODADA: ${{ github.event.inputs.RODADA }}
  SEASON: ${{ github.event.inputs.SEASON }}
  REGIONS: ${{ github.event.inputs.REGIONS }}
  DEBUG: ${{ github.event.inputs.DEBUG }}
  WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
  THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
  RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}

jobs:
  end2end:
    name: end2end
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Hotfix de merges (opcional)
        run: |
          python scripts/patch_merge_hotfix.py || true

      - name: Sanity check de entrada
        run: |
          set -e
          test -f "data/in/${RODADA}/matches_source.csv" || (echo "ERRO: data/in/${RODADA}/matches_source.csv não encontrado" && exit 2)
          echo "Entrada OK: data/in/${RODADA}/matches_source.csv"

      - name: Checar secrets presentes
        run: |
          set -e
          [ -n "${THEODDS_API_KEY}" ] && echo "THEODDS_API_KEY: OK" || (echo "FALTANDO THEODDS_API_KEY" && exit 3)
          [ -n "${RAPIDAPI_KEY}" ] && echo "RAPIDAPI_KEY: OK" || (echo "FALTANDO RAPIDAPI_KEY" && exit 3)

      - name: W&B Login
        run: |
          python -m wandb login "${WANDB_API_KEY}" --relogin || true
          echo "[wandb] login executado"

      # ===== Verificações de versão (garantir que os arquivos SAFE estão no runner) =====
      - name: Verificar arquivos SAFE no checkout
        run: |
          set -e
          grep -n "consensus-safe" scripts/consensus_odds_safe.py || (echo "CONSENSUS_SAFE_NOT_FOUND"; exit 4)
          grep -n "theoddsapi-safe" scripts/ingest_odds_theoddsapi_safe.py || (echo "SAFE_NOT_FOUND"; exit 4)
          python - <<'PY'
from importlib import util
print("[check] consensus_safe exists:", bool(util.find_spec("scripts.consensus_odds_safe")))
PY

      # ===== TheOddsAPI SAFE (parâmetros estritos, casamento confiável) =====
      - name: Ingest TheOddsAPI (SAFE)
        run: |
          set -e
          if [ -n "${THEODDS_API_KEY}" ]; then
            python scripts/ingest_odds_theoddsapi_safe.py \
              --rodada "${RODADA}" \
              --regions "${REGIONS}" \
              $( [ "${DEBUG}" = "true" ] && echo "--debug" )
          else
            echo "[theoddsapi-safe] SKIP: THEODDS_API_KEY ausente."
          fi

      # ===== API-Football (RapidAPI) SAFE (opcional, tolerante a falhas) =====
      - name: Ingest API-Football (SAFE)
        run: |
          set -e
          if [ -n "${RAPIDAPI_KEY}" ]; then
            # se tiver o script SAFE, ele é chamado; se não, caímos no módulo "normal" com flags equivalentes
            if [ -f "scripts/ingest_odds_apifootball_rapidapi_safe.py" ]; then
              python scripts/ingest_odds_apifootball_rapidapi_safe.py \
                --rodada "${RODADA}" \
                --season "${SEASON}" \
                $( [ "${DEBUG}" = "true" ] && echo "--debug" ) || true
            else
              python -m scripts.ingest_odds_apifootball_rapidapi \
                --rodada "${RODADA}" \
                --season "${SEASON}" \
                --window 1 \
                --fuzzy 0.92 \
                --aliases data/aliases_br.json \
                $( [ "${DEBUG}" = "true" ] && echo "--debug" ) || true
            fi
          else
            echo "[apifootball-safe] SKIP: RAPIDAPI_KEY ausente."
          fi

      # ===== Consenso SAFE (NÃO aborta quando vazio) =====
      - name: Consenso (SAFE)
        run: |
          set -e
          python -m scripts.consensus_odds_safe --rodada "${RODADA}"

      # ===== Publicar artefatos úteis =====
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: odds_${{ env.RODADA }}
          path: |
            data/out/${{ env.RODADA }}/odds_theoddsapi.csv
            data/out/${{ env.RODADA }}/unmatched_theoddsapi.csv
            data/out/${{ env.RODADA }}/odds_apifootball.csv
            data/out/${{ env.RODADA }}/unmatched_apifootball.csv
            data/out/${{ env.RODADA }}/odds_consensus.csv
            data/out/${{ env.RODADA }}/debug/**
          if-no-files-found: warn
