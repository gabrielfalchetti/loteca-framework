name: Loteca End-to-End (Tudo Integrado)

on:
  workflow_dispatch:
    inputs:
      rodada:
        description: "Identificador da rodada (ex.: 2025-09-27_1213)"
        required: true
        type: string
      days_window:
        description: "Janela ±dias para fixtures/odds (RapidAPI)"
        required: false
        default: "2"
        type: string
      min_match:
        description: "Similaridade mínima fuzzy (0-100)"
        required: false
        default: "85"
        type: string
      max_duplos:
        description: "Máximo de duplos"
        required: false
        default: "4"
        type: string
      max_triplos:
        description: "Máximo de triplos"
        required: false
        default: "2"
        type: string

jobs:
  loteca_e2e:
    runs-on: ubuntu-latest
    env:
      LOTECA_RODADA: ${{ inputs.rodada }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      OPENWEATHER_KEY: ${{ secrets.OPENWEATHER_KEY }}
      MAX_DUPLOS: ${{ inputs.max_duplos }}
      MAX_TRIPLOS: ${{ inputs.max_triplos }}
      DAYS_WINDOW: ${{ inputs.days_window }}
      MIN_MATCH: ${{ inputs.min_match }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy scikit-learn joblib requests PyYAML rapidfuzz==3.9.7 matplotlib

      # 1) MATCHES
      - name: Ensure matches.csv
        run: |
          set -e
          if [ -s "data/out/${LOTECA_RODADA}/matches.csv" ]; then
            echo "[matches] OK (já existia)."
          else
            test -s "data/in/${LOTECA_RODADA}/matches_source.csv" || { echo "::error::Crie data/in/${LOTECA_RODADA}/matches_source.csv (match_id,home,away[,date])"; exit 2; }
            python scripts/ingest_matches.py --rodada "${LOTECA_RODADA}"
          fi
          test -s "data/out/${LOTECA_RODADA}/matches.csv"

      # 2) ODDS REAIS + CONSENSO
      - name: Coletar odds e fazer consenso
        run: |
          set -e
          USED_ODDS_API=0
          USED_RAPIDAPI=0
          if [ -n "${ODDS_API_KEY}" ]; then
            python scripts/ingest_odds.py --rodada "${LOTECA_RODADA}" --sport soccer_brazil_campeonato --regions uk,eu --market h2h --allow-partial --min-match "${MIN_MATCH}" || true
            USED_ODDS_API=1
          fi
          if [ -n "${RAPIDAPI_KEY}" ]; then
            python scripts/ingest_odds_apifootball_rapidapi.py --rodada "${LOTECA_RODADA}" --allow-partial --days-window "${DAYS_WINDOW}" --min-match "${MIN_MATCH}" || true
            USED_RAPIDAPI=1
          fi
          python scripts/merge_odds_consensus.py --rodada "${LOTECA_RODADA}" || true
          test -s "data/out/${LOTECA_RODADA}/odds.csv" || { echo "::error::odds.csv ausente após coleta/merge"; exit 2; }
          echo "[audit] Odds usadas: TheOddsAPI=${USED_ODDS_API} RapidAPI=${USED_RAPIDAPI}"

      # 3) MODELAGEM
      - name: Modelagem (xG, DC bivariado, stacking)
        run: |
          set -e
          python scripts/features_xg.py --rodada "${LOTECA_RODADA}"
          python scripts/features_xg_bivar.py --rodada "${LOTECA_RODADA}" --kmax 10
          python scripts/stack_probs_bivar.py --rodada "${LOTECA_RODADA}" --w-consensus 0.5 --w-xg 0.25 --w-bivar 0.25 || true
          if [ ! -s "data/out/${LOTECA_RODADA}/joined_stacked_bivar.csv" ]; then
            python scripts/stack_probs.py --rodada "${LOTECA_RODADA}" --w-consensus 0.6 --w-xg 0.4
            echo "[audit] Stacking fallback (sem DC bivariado)."
          fi
          test -s "data/out/${LOTECA_RODADA}/joined_stacked_bivar.csv" -o -s "data/out/${LOTECA_RODADA}/joined_stacked.csv"

      # 4) INTEL PRÉ-JOGO
      - name: Lineups (API-Football)
        run: |
          set -e
          python scripts/ingest_lineups_apifootball.py --rodada "${LOTECA_RODADA}" || true
          if [ -s "data/out/${LOTECA_RODADA}/lineups_raw.csv" ]; then echo "[audit] Lineups: USADAS"; else echo "[audit] Lineups: NÃO USADAS"; fi

      - name: Weather (OpenWeather)
        run: |
          set -e
          if [ -n "${OPENWEATHER_KEY}" ]; then
            python scripts/ingest_weather_openweather.py --rodada "${LOTECA_RODADA}" --window-hours 6 || true
          else
            echo "[audit] OPENWEATHER_KEY ausente; pulando weather."
          fi
          if [ -s "data/out/${LOTECA_RODADA}/weather_raw.csv" ]; then echo "[audit] Weather: USADO"; else echo "[audit] Weather: NÃO USADO"; fi

      - name: Odds movement
        run: |
          set -e
          python scripts/odds_exchange_movement.py --rodada "${LOTECA_RODADA}" || true
          if [ -s "data/out/${LOTECA_RODADA}/ex_movement.csv" ]; then echo "[audit] Movement: USADO"; else echo "[audit] Movement: NÃO USADO"; fi

      - name: Ajuste Pré-jogo (gera joined_pregame.csv)
        run: |
          set -e
          python scripts/adjust_probs_pregame.py --rodada "${LOTECA_RODADA}" --cap-lineups 0.02 --cap-weather 0.015 --cap-move 0.015
          test -s "data/out/${LOTECA_RODADA}/joined_pregame.csv"
          echo "[audit] Probabilidades FINAIS para o cartão: joined_pregame.csv"

      # 5) CARTÃO
      - name: Make Ticket
        run: |
          set -e
          python scripts/make_ticket.py --rodada "${LOTECA_RODADA}" --max-duplos "${MAX_DUPLOS}" --max-triplos "${MAX_TRIPLOS}"
          echo "==== loteca_ticket.txt ===="
          cat "data/out/${LOTECA_RODADA}/loteca_ticket.txt"

      # 6) Artefatos
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca-e2e-${{ inputs.rodada }}
          path: |
            data/out/${{ inputs.rodada }}/matches.csv
            data/out/${{ inputs.rodada }}/odds.csv
            data/out/${{ inputs.rodada }}/xg_features.csv
            data/out/${{ inputs.rodada }}/xg_bivar.csv
            data/out/${{ inputs.rodada }}/joined_stacked_bivar.csv
            data/out/${{ inputs.rodada }}/lineups_raw.csv
            data/out/${{ inputs.rodada }}/weather_raw.csv
            data/out/${{ inputs.rodada }}/ex_movement.csv
            data/out/${{ inputs.rodada }}/joined_pregame.csv
            data/out/${{ inputs.rodada }}/loteca_ticket.csv
            data/out/${{ inputs.rodada }}/loteca_ticket.txt
