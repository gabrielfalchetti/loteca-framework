name: end2end

on:
  workflow_dispatch:
    inputs:
      rodada:
        description: "Rodada ex: 2025-09-27_1213"
        required: true
  push:
    branches: [ main ]

jobs:
  end2end:
    runs-on: ubuntu-latest
    env:
      RODADA: ${{ github.event.inputs.rodada }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
      RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Patch merge hotfix (idempotente)
        run: python scripts/patch_merge_hotfix.py || true

      - name: Verifica entrada da rodada
        if: ${{ env.RODADA != '' }}
        run: |
          echo "Entrada OK: data/in/${RODADA}/matches_source.csv"

      - name: W&B login
        run: python -m wandb login "${WANDB_API_KEY}" --relogin || true

      # -------- Odds (ok mesmo sem credencial – gera CSV vazio) --------
      - name: TheOddsAPI (safe)
        run: python scripts/ingest_odds_theoddsapi_safe.py --rodada "$RODADA" --regions "uk,eu,us,au" --debug || true

      - name: RapidAPI API-Football
        run: python scripts/ingest_odds_apifootball_rapidapi.py --rodada "$RODADA" --season 2025 --window 14 --fuzzy 0.9 --aliases "data/aliases_br.json" --debug || true

      - name: Odds de consenso
        run: python scripts/ingest_odds.py --rodada "$RODADA"

      # -------- Features / XG --------
      - name: Join features
        run: python scripts/join_features.py --rodada "$RODADA"

      - name: Compute xG
        run: python scripts/compute_xg.py --rodada "$RODADA" --out "data/out/$RODADA/xg.csv"

      # -------- Probabilidades --------
      - name: Build probabilities (gera preds_bivar se faltar)
        run: |
          if [ -f "data/out/$RODADA/preds_bivar.csv" ]; then
            python scripts/build_probs.py --rodada "$RODADA" --source "data/out/$RODADA/features_base.csv"
          else
            python scripts/build_probs.py --rodada "$RODADA"
          fi

      # -------- (3) Blend --------
      - name: Blend de modelos (fallback seguro sem odds)
        run: python scripts/blend_probs.py --rodada "$RODADA" --alpha 0.75 || true

      # -------- (4) Calibração --------
      - name: Calibração de probabilidades
        run: python scripts/calibrate_probs.py --rodada "$RODADA" || true

      # -------- Risk (corrigido) --------
      - name: Evaluate risk
        run: |
          python scripts/evaluate_risk.py --rodada "$RODADA"

      # -------- (5) Picker Loteca --------
      - name: Loteca picker (duplos/triplos)
        run: python scripts/loteca_picker.py --rodada "$RODADA" --duplos 4 --triplos 2 || true

      # -------- Notícias / Scorecard --------
      - name: Ingest news
        run: python scripts/ingest_news.py --rodada "$RODADA" --provider auto --lang pt --regions br --days 7 --limit 6 --aliases "data/aliases_br.json" || true

      - name: Scorecard
        run: python scripts/scorecard.py --rodada "$RODADA" --out "data/out/$RODADA/scorecard.html"

      # -------- Artefatos --------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_${{ env.RODADA }}.zip
          path: |
            data/out/${{ env.RODADA }}/*
            data/in/${{ env.RODADA }}/*
