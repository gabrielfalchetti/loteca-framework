name: End2End Odds+News ML (STRICT • 100% automático)

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  SEASON: "2025"
  REGIONS: "uk,eu,us,au"
  LOOKAHEAD_DAYS: "3"
  BANKROLL: "1000"
  KELLY_FRACTION: "0.5"
  KELLY_CAP: "0.1"
  KELLY_TOP_N: "14"
  ROUND_TO: "1"
  DEBUG: "true"

jobs:
  end2end:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          set -euo pipefail
          python -V
          python -m pip install --upgrade pip
          # Dependências usadas nos scripts
          pip install \
            pandas numpy python-dateutil pytz requests tenacity \
            rapidfuzz \
            scikit-learn==1.* \
            beautifulsoup4 lxml \
            tqdm
          # (opcional) CLI para debug de CSVs
          pip install csvkit

      - name: Prepare run folders
        id: prep
        run: |
          set -euo pipefail
          RUN_ID=$(date +%s)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_OUTPUT
          echo "OUT_DIR=data/out/${RUN_ID}" >> $GITHUB_ENV
          mkdir -p "data/in" "${OUT_DIR}"

      - name: Validate secrets (STRICT)
        env:
          HAS_THEODDS: ${{ secrets.THEODDS_API_KEY != '' }}
          HAS_XRAPI:   ${{ secrets.X_RAPIDAPI_KEY != '' }}
          HAS_NEWS:    ${{ secrets.NEWSAPI_KEY != '' }}
          HAS_WANDB:   ${{ secrets.WANDB_API_KEY != '' }}
        run: |
          set -euo pipefail
          [ "${HAS_THEODDS}" = "true" ] || { echo "::error::Falta THEODDS_API_KEY"; exit 2; }
          [ "${HAS_XRAPI}"   = "true" ] || { echo "::error::Falta X_RAPIDAPI_KEY"; exit 2; }
          [ "${HAS_NEWS}"    = "true" ] || { echo "::notice::NEWSAPI_KEY ausente — só afeta bloco de notícias."; }
          [ "${HAS_WANDB}"   = "true" ] || { echo "::notice::WANDB_API_KEY ausente — tracking desligado."; }

      - name: Build whitelist automaticamente (APIs obrigatórias)
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
          X_RAPIDAPI_KEY:  ${{ secrets.X_RAPIDAPI_KEY }}
        run: |
          set -euo pipefail
          [ -f scripts/build_whitelist_from_apis.py ] || { echo "::error::scripts/build_whitelist_from_apis.py não encontrado"; exit 3; }

          a=0; until [ $a -ge 3 ]; do
            python scripts/build_whitelist_from_apis.py \
              --out data/in/matches_whitelist.csv \
              --season "${SEASON}" \
              --regions "${REGIONS}" \
              --lookahead-days "${LOOKAHEAD_DAYS}" \
              ${DEBUG:+--debug} && break
            a=$((a+1)); echo "retry whitelist: $a/3"; sleep $((5*a))
          done

          WL="data/in/matches_whitelist.csv"
          test -s "$WL" || { echo "::error::Whitelist não gerada"; exit 3; }
          header="$(head -n1 "$WL" | tr -d '\r')"
          for c in match_id home away; do
            echo "$header" | grep -qiE "(^|,)$c(,|$)" || { echo "::error::Whitelist sem coluna '$c'"; exit 3; }
          done
          LINES=$(wc -l < "$WL" | tr -d ' ')
          [ "$LINES" -ge 2 ] || { echo "::error::Whitelist sem jogos"; exit 3; }
          cp "$WL" "${OUT_DIR}/matches_whitelist.csv"
          echo "===== Preview whitelist ====="
          head -n 20 "$WL" || true

      - name: Ingest odds — TheOddsAPI (obrigatório)
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
        run: |
          set -euo pipefail
          [ -f scripts/ingest_odds_theoddsapi.py ] || { echo "::error::scripts/ingest_odds_theoddsapi.py não encontrado."; exit 4; }
          a=0; until [ $a -ge 3 ]; do
            python -m scripts.ingest_odds_theoddsapi \
              --rodada "${OUT_DIR}" \
              --season "${SEASON}" \
              --regions "${REGIONS}" \
              ${DEBUG:+--debug} && break
            a=$((a+1)); echo "retry theodds: $a/3"; sleep $((5*a))
          done
          test -s "${OUT_DIR}/odds_theoddsapi.csv" || { echo "::error::odds_theoddsapi.csv não gerado"; exit 4; }

      - name: Ingest odds — API-Football via RapidAPI (obrigatório)
        env:
          X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
        run: |
          set -euo pipefail
          [ -f scripts/ingest_odds_apifootball_rapidapi.py ] || { echo "::error::scripts/ingest_odds_apifootball_rapidapi.py não encontrado."; exit 5; }
          a=0; until [ $a -ge 3 ]; do
            python -m scripts.ingest_odds_apifootball_rapidapi \
              --rodada "${OUT_DIR}" \
              --season "${SEASON}" \
              ${DEBUG:+--debug} && break
            a=$((a+1)); echo "retry apifootball: $a/3"; sleep $((5*a))
          done
          OUT="${OUT_DIR}/odds_apifootball.csv"
          test -s "$OUT" || { echo "::error::odds_apifootball.csv não gerado"; exit 5; }
          header="$(head -n1 "$OUT" | tr -d '\r')"
          for c in match_id home away odds_home odds_draw odds_away; do
            echo "$header" | grep -qiE "(^|,)$c(,|$)" || { echo "::error::Coluna '$c' ausente em odds_apifootball.csv"; exit 5; }
          done

      - name: Odds consensus (STRICT)
        run: |
          set -euo pipefail
          [ -f scripts/consensus_odds_safe.py ] || { echo "::error::scripts/consensus_odds_safe.py não encontrado"; exit 6; }
          python -m scripts.consensus_odds_safe --rodada "${OUT_DIR}" --strict
          OUT_FILE="${OUT_DIR}/odds_consensus.csv"
          test -s "$OUT_FILE" || { echo "::error::odds_consensus.csv não gerado"; exit 6; }
          header="$(head -n1 "$OUT_FILE" | tr -d '\r')"
          for c in team_home team_away odds_home odds_draw odds_away; do
            echo "$header" | grep -qiE "(^|,)$c(,|$)" || { echo "::error::Coluna '$c' ausente em odds_consensus.csv"; exit 6; }
          done
          head -n 20 "$OUT_FILE" || true

      # (demais passos do seu pipeline — notícias, clima, predição, calibração, kelly, etc.)
      # Mantive apenas até o ponto do erro reportado para focar na correção de dependências.