name: Loteca Super End2End

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  end2end:
    runs-on: ubuntu-latest

    env:
      SEASON: 2025
      LOOKAHEAD_DAYS: 3
      REGIONS: uk,eu,us,au
      BANKROLL: 1000
      KELLY_FRACTION: 0.5
      KELLY_CAP: 0.10
      KELLY_TOP_N: 14
      ROUND_TO: 1
      TRAIN_CALIBRATOR: true
      SOURCE_CSV: data/in/matches_source.csv
      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
      WANDB_DISABLED: true
      OUT_DIR: data/out/${{ github.run_id }}
      FEATURES_PARQUET: data/history/features.parquet
      SOURCE_CSV_NORM: data/out/${{ github.run_id }}/matches_norm.csv
      AUTO_ALIASES_JSON: data/aliases/auto_aliases.json
      BIVARIATE_CSV: data/out/${{ github.run_id }}/bivariate.csv
      MODEL_PKL: data/out/${{ github.run_id }}/dynamic_model.pkl
      STATE_JSON: data/out/${{ github.run_id }}/state_params.json
      PREDICTIONS_CSV: data/out/${{ github.run_id }}/predictions.csv
      CALIBRATOR_PKL: data/out/${{ github.run_id }}/calibrator.pkl
      PREDICTIONS_CALIB_CSV: data/out/${{ github.run_id }}/predictions_calibrated.csv
      CONSENSUS_CSV: data/out/${{ github.run_id }}/odds_consensus.csv
      KELLY_BETS_CSV: data/out/${{ github.run_id }}/bets_kelly.csv
      LOTECA_CARD_CSV: data/out/${{ github.run_id }}/loteca_card.csv

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step para normalizar matches_source.csv
      - name: Normalize matches
        run: |
          set -euo pipefail
          python -m scripts.normalize_matches --in_csv "${{ env.SOURCE_CSV }}" --out_csv "${{ env.SOURCE_CSV_NORM }}"

      # Step para buscar odds do TheOddsAPI
      - name: Ingest TheOddsAPI odds
        run: |
          set -euo pipefail
          python -m scripts.ingest_odds_theoddsapi --rodada "${{ env.OUT_DIR }}" --source_csv "${{ env.SOURCE_CSV_NORM }}" --api_key_apifootball "${{ secrets.API_FOOTBALL_KEY }}" --aliases_file "${{ env.AUTO_ALIASES_JSON }}"
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
          REGIONS: ${{ env.REGIONS }}

      # Step para buscar stats da API-Football
      - name: Ingest API Football complementary
        run: |
          set -euo pipefail
          python -m scripts.ingest_odds_apifootball --rodada "${{ env.OUT_DIR }}" --source_csv "${{ env.SOURCE_CSV_NORM }}" --api_key_theodds "${{ secrets.THEODDS_API_KEY }}" --regions "${{ env.REGIONS }}" --aliases_file "${{ env.AUTO_ALIASES_JSON }}"
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}

      # Outros steps (exemplo, ajustar conforme necess√°rio)
      - name: Generate features
        run: |
          set -euo pipefail
          python -m scripts.generate_features --in_csv "${{ env.SOURCE_CSV_NORM }}" --out_parquet "${{ env.FEATURES_PARQUET }}"

      - name: Train model
        run: |
          set -euo pipefail
          python -m scripts.train_model --features "${{ env.FEATURES_PARQUET }}" --out_pkl "${{ env.MODEL_PKL }}" --out_json "${{ env.STATE_JSON }}"

      - name: Generate predictions
        run: |
          set -euo pipefail
          python -m scripts.predict --model "${{ env.MODEL_PKL }}" --features "${{ env.FEATURES_PARQUET }}" --out_csv "${{ env.PREDICTIONS_CSV }}"

      - name: Calibrate predictions
        run: |
          set -euo pipefail
          python -m scripts.calibrate_probs --in_csv "${{ env.PREDICTIONS_CSV }}" --out_csv "${{ env.PREDICTIONS_CALIB_CSV }}" --out_pkl "${{ env.CALIBRATOR_PKL }}"

      - name: Generate consensus odds
        run: |
          set -euo pipefail
          python -m scripts.consensus_odds --in_csv "${{ env.PREDICTIONS_CALIB_CSV }}" --out_csv "${{ env.CONSENSUS_CSV }}"

      - name: Generate Kelly bets
        run: |
          set -euo pipefail
          python -m scripts.kelly_bets --in_csv "${{ env.CONSENSUS_CSV }}" --out_csv "${{ env.KELLY_BETS_CSV }}"

      - name: Generate Loteca card
        run: |
          set -euo pipefail
          python -m scripts.generate_loteca_card --in_csv "${{ env.KELLY_BETS_CSV }}" --out_csv "${{ env.LOTECA_CARD_CSV }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca-outputs
          path: |
            ${{ env.OUT_DIR }}/*.csv
            ${{ env.OUT_DIR }}/*.pkl
            ${{ env.STATE_JSON }}