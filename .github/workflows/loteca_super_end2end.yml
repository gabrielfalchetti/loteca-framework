# ... (Etapas anteriores de ingestão de odds, etc.)

      # ======================
      # TREINAMENTO: MODELO DINÂMICO BIVARIATE POISSON (NOVA ETAPA CRÍTICA)
      # ======================
      - name: Treinar Modelo Dinâmico (State Space / Kalman Filter)
        shell: bash
        run: |
          set -euo pipefail
          [ -f scripts/train_dynamic_model.py ] || { echo "::error::scripts/train_dynamic_model.py not found"; exit 12; }
          # Este script buscará dados históricos, treinará o modelo dinâmico e salvará os parâmetros da rodada.
          python -m scripts.train_dynamic_model --rodada "${OUT_DIR}"
          OUT="${OUT_DIR}/dynamic_params.json"
          test -s "$OUT" || { echo "::error::dynamic_params.json not generated"; exit 12; }

      # ======================
      # xG UNIVARIATE (OBRIGATÓRIO) - Mantido, mas não é a prioridade
      # ======================
      - name: xG Univariate (obrigatório)
# ... (restante desta etapa)

      # ======================
      # xG BIVARIATE (OBRIGATÓRIO)
      # ======================
      - name: xG Bivariate (obrigatório)
        shell: bash
        run: |
          set -euo pipefail
          [ -f scripts/xg_bivariate.py ] || { echo "::error::scripts/xg_bivariate.py not found"; exit 8; }
          # O script 'xg_bivariate' agora vai ler dynamic_params.json
          python -m scripts.xg_bivariate --rodada "${OUT_DIR}"
          OUT="${OUT_DIR}/xg_bivariate.csv"
          test -s "$OUT" || { echo "::error::xg_bivariate.csv not generated"; exit 8; }
# ... (restante do workflow)
