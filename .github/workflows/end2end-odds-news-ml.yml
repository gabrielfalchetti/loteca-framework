name: end2end-odds-news-ml

on:
  workflow_dispatch: {}

jobs:
  end2end:
    name: End2End - Odds → Consenso → Predição → Cartão
    runs-on: ubuntu-24.04

    env:
      # Identificador estável por execução
      RODADA_ID: ${{ github.run_id }}
      OUT_DIR: data/out/${{ github.run_id }}

      # Parâmetros de modelagem/apostas
      SEASON: "2025"
      REGIONS: "uk,eu,us,au"
      BANKROLL: "1000"
      KELLY_FRACTION: "0.5"
      KELLY_CAP: "0.1"
      ROUND_TO: "1"
      KELLY_TOP_N: "14"
      DEBUG: "true"

      # Esportes/ligas do TheOddsAPI (ajuste conforme necessidade)
      ODDS_SPORTS: "soccer_argentina_primera_division,soccer_argentina_primera_nacional"

      # Variáveis opcionais (mantidas para compatibilidade)
      APIFOOT_LEAGUE_IDS: ""
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            # fallback mínimo (se necessário)
            pip install pandas requests PyYAML numpy scikit-learn tqdm
          fi
          echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Verificar arquivo de jogos (matches_source.csv)
        run: |
          set -e
          FILE="data/in/matches_source.csv"
          if [ ! -f "$FILE" ]; then
            echo "::error::Arquivo $FILE não encontrado. Crie-o no repositório antes de rodar."
            exit 2
          fi
          echo "Entrada OK: $FILE"
          echo "Prévia:"
          head -n 20 "$FILE" || true

      - name: Checar secrets essenciais
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
        run: |
          set -e
          if [ -z "${THEODDS_API_KEY}" ]; then
            echo "::error::SECRET THEODDS_API_KEY ausente."
            exit 3
          fi
          echo "THEODDS_API_KEY: OK"

      - name: Preparar diretórios de saída
        run: |
          set -e
          mkdir -p "${OUT_DIR}"
          mkdir -p "data/out/${RODADA_ID}"

      - name: Coletar odds (TheOddsAPI)
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
        run: |
          set -e
          echo "[theoddsapi] usando esportes: ${ODDS_SPORTS}"
          if [ ! -f "scripts/ingest_odds_theoddsapi_safe.py" ]; then
            echo "::error::scripts/ingest_odds_theoddsapi_safe.py não encontrado."
            exit 4
          fi
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            --sports "${ODDS_SPORTS}" \
            --debug

          echo "Listando ${OUT_DIR}:"
          ls -la "${OUT_DIR}" || true

      - name: Sincronizar OUT_DIR → data/out/${RODADA_ID}
        run: |
          set -e
          if [ ! -f "${OUT_DIR}/odds_theoddsapi.csv" ] && [ ! -f "${OUT_DIR}/odds_apifootball.csv" ]; then
            echo "::error::Nenhuma odds gerada em ${OUT_DIR}."
            echo "Cheque a etapa de coleta e o data/in/matches_source.csv"
            exit 7
          fi

          # O consenso e os demais scripts leem por convenção em data/out/<RODADA_ID>/
          cp -f "${OUT_DIR}/"*.csv "data/out/${RODADA_ID}/" 2>/dev/null || true

          echo "Listando data/out/${RODADA_ID}:"
          ls -la "data/out/${RODADA_ID}" || true

      - name: Consolidar odds (consensus)
        run: |
          set -e
          # O módulo espera SOMENTE o ID, pq ele próprio monta data/out/<ID> internamente
          python -m scripts.consensus_odds_safe --rodada "${RODADA_ID}"

          echo "==== odds_consensus.csv (preview) ===="
          head -n 30 "data/out/${RODADA_ID}/odds_consensus.csv" || true
          echo "======================================"

      - name: Predizer resultados a partir das odds
        run: |
          set -e
          if [ ! -f "scripts/predict_from_odds.py" ]; then
            echo "::error::scripts/predict_from_odds.py não encontrado."
            exit 11
          fi

          python scripts/predict_from_odds.py --rodada "${RODADA_ID}" --debug

          echo "==== predictions_market.csv (preview) ===="
          head -n 30 "data/out/${RODADA_ID}/predictions_market.csv" || true
          echo "=========================================="

      - name: Gerar cartão da Loteca
        run: |
          set -e
          if [ ! -f "scripts/build_cartao.py" ]; then
            echo "::error::scripts/build_cartao.py não encontrado."
            exit 12
          fi
          python scripts/build_cartao.py --rodada "${RODADA_ID}"
          echo "==== loteca_cartao.txt ===="
          cat "data/out/${RODADA_ID}/loteca_cartao.txt" || true

      - name: Publicar Kelly (opcional)
        run: |
          set -e
          if [ -f "scripts/publish_kelly.py" ]; then
            python scripts/publish_kelly.py --rodada "${RODADA_ID}" --debug || true
          else
            echo "[kelly] AVISO: scripts/publish_kelly.py não encontrado — pulando."
          fi

      - name: Upload artefatos
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ env.RODADA_ID }}
          path: |
            data/out/${{ env.RODADA_ID }}/odds_theoddsapi.csv
            data/out/${{ env.RODADA_ID }}/odds_apifootball.csv
            data/out/${{ env.RODADA_ID }}/unmatched_theoddsapi.csv
            data/out/${{ env.RODADA_ID }}/unmatched_apifootball.csv
            data/out/${{ env.RODADA_ID }}/odds_consensus.csv
            data/out/${{ env.RODADA_ID }}/predictions_market.csv
            data/out/${{ env.RODADA_ID }}/loteca_cartao.txt
            data/out/${{ env.RODADA_ID }}/kelly_stakes.csv
          if-no-files-found: warn