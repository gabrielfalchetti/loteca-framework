name: End2End - Odds + News + ML

on:
  workflow_dispatch:
    inputs:
      SEASON:
        description: "Ano da temporada"
        default: "2025"
        required: true

jobs:
  end2end:
    runs-on: ubuntu-24.04
    env:
      # ==== Parâmetros do modelo/ban banca ====
      SEASON: ${{ inputs.SEASON }}
      REGIONS: uk,eu,us,au
      BANKROLL: 1000
      KELLY_FRACTION: 0.5
      KELLY_CAP: 0.1
      ROUND_TO: 1
      KELLY_TOP_N: 14
      DEBUG: true

      # ==== Segredos/APIs (defina em Settings > Secrets and variables > Actions) ====
      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

      # ==== Ligas do API-Football (RapidAPI) — ajuste à sua realidade ====
      # 71 = Brasil Série A, 72 = Série B (exemplo)
      APIFOOT_LEAGUE_IDS: "71,72"

      # ==== Saída desta execução (um diretório único por run) ====
      OUT_DIR: data/out/${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # checagem rápida
          python - << 'PY'
import importlib, sys
mods = ["requests","pandas","numpy","PyYAML","scikit_learn","tqdm"]
miss = [m for m in mods if importlib.util.find_spec(m) is None]
if miss:
    sys.exit(f"Dependências ausentes: {miss}")
print("Dependências OK.")
PY

      - name: Config env (PYTHONPATH, OUT_DIR)
        run: |
          echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          mkdir -p "${OUT_DIR}"

      - name: Preparar matches_source (aceita formato simples)
        run: |
          set -e
          SIMPLE="data/in/matches_source.csv"
          if [ -f "$SIMPLE" ]; then
            echo "Encontrado $SIMPLE"
            # muitos scripts esperam data/in/<rodada>/matches_source.csv;
            # copiamos o simples para o OUT_DIR, mantendo compatibilidade:
            mkdir -p "data/in/${OUT_DIR}"
            cp "$SIMPLE" "data/in/${OUT_DIR}/matches_source.csv"
          fi

          FILE="data/in/${OUT_DIR}/matches_source.csv"
          if [ ! -f "$FILE" ]; then
            echo "::error::Arquivo $FILE não encontrado. Crie data/in/matches_source.csv com colunas: home,away,match_key (opcional)."
            exit 2
          fi
          # validação mínima de header
          python - << 'PY'
import sys, pandas as pd
f = sys.argv[1]
df = pd.read_csv(f)
need = {"home","away"}
missing = [c for c in need if c not in df.columns]
if missing:
    sys.exit(f"Header inválido em {f}. Faltando colunas: {missing}")
print("matches_source OK:", f)
PY
          echo "Entrada OK: $FILE"

        shell: bash

      - name: Login W&B (opcional)
        run: |
          if [ -n "${WANDB_API_KEY}" ]; then
            python - << 'PY'
import os, subprocess
key=os.environ.get("WANDB_API_KEY","")
if key:
    subprocess.run(["wandb","login",key], check=True)
print("[wandb] login executado")
PY
          else
            echo "[wandb] sem chave — pulando"
          fi

      # ====================== INGEST ======================

      - name: Ingest odds (TheOddsAPI) SAFE
        run: |
          set -e
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            --debug

      - name: Ingest odds (API-Football via RapidAPI) SAFE
        env:
          # usa env APIFOOT_LEAGUE_IDS
          APIFOOT_LEAGUE_IDS: ${{ env.APIFOOT_LEAGUE_IDS }}
        run: |
          set -e
          python -m scripts.ingest_odds_apifootball_rapidapi \
            --rodada "${OUT_DIR}" \
            --season "${SEASON}" \
            --window 2 \
            --aliases data/aliases_br.json \
            --leagues "${APIFOOT_LEAGUE_IDS}" \
            --debug || echo "[apifootball-safe] prosseguindo mesmo se vazio/403"

      - name: Build consensus odds SAFE
        run: |
          set -e
          if python -c "import importlib.util as u; import sys; sys.exit(0 if u.find_spec('scripts.consensus_odds_safe') else 1)"; then
            python -m scripts.consensus_odds_safe --rodada "${OUT_DIR}"
          else
            echo "[consensus-safe] ERRO: módulo scripts.consensus_odds_safe não encontrado."
            exit 10
          fi

      # ====================== PREVISÃO ======================

      - name: Predict from market odds
        run: |
          set -e
          python scripts/predict_from_odds.py --rodada "${OUT_DIR}" --debug

      # (se você tiver xG/univariado/bivariado/calibração/stacked, mantenha aqui)
      - name: Predict xG (uni/bi/calib/stack) — opcional
        continue-on-error: true
        run: |
          set -e
          for f in scripts/predict_xg_uni.py scripts/predict_xg_bi.py scripts/calibrate_predictions.py scripts/stack_predictions.py; do
            if [ -f "$f" ]; then
              python "$f" --rodada "${OUT_DIR}" --debug || true
            fi
          done

      # ====================== NEWS / INJURIES ======================

      - name: News ingest (opcional)
        continue-on-error: true
        run: |
          if [ -f "scripts/news_ingest_safe.py" ]; then
            python scripts/news_ingest_safe.py || true
          else
            echo "[news-safe] ausente — pulando"
          fi

      - name: Injuries ingest (opcional)
        continue-on-error: true
        run: |
          if [ -f "scripts/injuries_apifootball_safe.py" ]; then
            python scripts/injuries_apifootball_safe.py || true
          else
            echo "[injuries-safe] ausente — pulando"
          fi

      # ====================== CARTÃO / KELLY ======================

      - name: Build Cartão Loteca
        run: |
          set -e
          python scripts/build_cartao.py --rodada "${OUT_DIR}"

      - name: Publicar Kelly stakes
        run: |
          set -e
          python scripts/publish_kelly.py --rodada "${OUT_DIR}" --debug

      # ====================== UPLOAD ======================

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ github.run_id }}
          path: |
            ${{ env.OUT_DIR }}/**
            data/out/**/odds_*.csv
            data/in/${{ env.OUT_DIR }}/matches_source.csv
          if-no-files-found: warn
          overwrite: false