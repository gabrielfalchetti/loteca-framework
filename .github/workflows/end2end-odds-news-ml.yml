name: end2end

on:
  workflow_dispatch:
    inputs:
      SEASON:
        description: "Temporada"
        type: string
        default: "2025"
      REGIONS:
        description: "Regiões das odds (TheOddsAPI)"
        type: string
        default: "uk,eu,us,au"
      BANKROLL:
        description: "Bankroll inicial"
        type: number
        default: 1000
      KELLY_FRACTION:
        description: "Fração de Kelly"
        type: number
        default: 0.5
      KELLY_CAP:
        description: "Teto de Kelly por pick (0-1)"
        type: number
        default: 0.1
      ROUND_TO:
        description: "Arredondar stake para"
        type: number
        default: 1
      KELLY_TOP_N:
        description: "Número máximo de picks"
        type: number
        default: 14
      APIFOOT_LEAGUE_IDS:
        description: "Lista de IDs de ligas (RapidAPI API-Football), separados por vírgula"
        type: string
        default: "71,72"  # Série A=71, Série B=72 (exemplo)

jobs:
  end2end:
    runs-on: ubuntu-24.04
    env:
      SEASON: ${{ inputs.SEASON }}
      REGIONS: ${{ inputs.REGIONS }}
      BANKROLL: ${{ inputs.BANKROLL }}
      KELLY_FRACTION: ${{ inputs.KELLY_FRACTION }}
      KELLY_CAP: ${{ inputs.KELLY_CAP }}
      ROUND_TO: ${{ inputs.ROUND_TO }}
      KELLY_TOP_N: ${{ inputs.KELLY_TOP_N }}
      DEBUG: true
      APIFOOT_LEAGUE_IDS: ${{ inputs.APIFOOT_LEAGUE_IDS }}

      # Secrets necessários (configure em Settings > Secrets and variables > Actions):
      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH (package imports)
        run: echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Resolve OUT_DIR and ensure folders
        id: dirs
        run: |
          OUT_DIR="data/out/${GITHUB_RUN_ID}"
          echo "OUT_DIR=${OUT_DIR}" >> $GITHUB_ENV
          mkdir -p "${OUT_DIR}"
          mkdir -p "data/in"

      - name: Check input file exists (single source)
        run: |
          FILE="data/in/matches_source.csv"
          if [ ! -f "$FILE" ]; then
            echo "::error::Arquivo $FILE não encontrado."
            exit 2
          fi
          echo "Entrada OK: $FILE"

      - name: W&B login (opcional)
        if: env.WANDB_API_KEY != ''
        run: |
          python -m wandb login "${WANDB_API_KEY}" --relogin || true
          echo "[wandb] login executado"

      # ========== INGEST: TheOddsAPI ==========
      - name: Ingest odds (TheOddsAPI, seguro)
        if: env.THEODDS_API_KEY != ''
        run: |
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            --debug

      # ========== INGEST: API-Football (RapidAPI) – opcional ==========
      - name: Ingest odds (API-Football via RapidAPI, seguro)
        if: env.X_RAPIDAPI_KEY != ''
        run: |
          # Preferir o script _safe; se der 403/no-subscription, não falha o job.
          if [ -f "scripts/ingest_odds_apifootball_rapidapi_safe.py" ]; then
            python scripts/ingest_odds_apifootball_rapidapi_safe.py \
              --rodada "${OUT_DIR}" \
              --season "${SEASON}" \
              --debug || true
          elif [ -f "scripts/ingest_odds_apifootball_rapidapi.py" ]; then
            python -m scripts.ingest_odds_apifootball_rapidapi \
              --rodada "${OUT_DIR}" \
              --season "${SEASON}" \
              --window 2 \
              --fuzzy 0.90 \
              --aliases data/aliases_br.json \
              --debug || true
          else
            echo "[apifootball] AVISO: nenhum script de ingestão encontrado — pulando."
          fi

      # ========== CONSENSO ==========
      - name: Odds consensus (safe)
        run: |
          if python -c "import importlib.util; import sys; sys.exit(0 if importlib.util.find_spec('scripts.consensus_odds_safe') else 1)"; then
            python -m scripts.consensus_odds_safe --rodada "${OUT_DIR}"
          else
            echo "[consensus-safe] ERRO: módulo scripts.consensus_odds_safe não encontrado."
            exit 10
          fi

      # ========== PREDICT (market-only fallback) ==========
      - name: Predict from odds (market)
        run: |
          if [ -f "scripts/predict_from_odds.py" ]; then
            python scripts/predict_from_odds.py --rodada "${OUT_DIR}" --debug
          else
            echo "[predict] ERRO: scripts/predict_from_odds.py não encontrado."
            exit 11
          fi

      # ========== NEWS (opcional) ==========
      - name: News ingest (opcional)
        if: env.NEWSAPI_KEY != ''
        run: |
          if [ -f "scripts/news_ingest_safe.py" ]; then
            python scripts/news_ingest_safe.py --rodada "${OUT_DIR}" || true
          else
            echo "[news-safe] AVISO: scripts/news_ingest_safe.py não encontrado — pulando news."
          fi

      # ========== INJURIES (opcional, via API-Football) ==========
      - name: Injuries ingest (opcional)
        if: env.X_RAPIDAPI_KEY != ''
        run: |
          if [ -f "scripts/injuries_apifootball_safe.py" ]; then
            python scripts/injuries_apifootball_safe.py --rodada "${OUT_DIR}" || true
          else
            echo "[injuries-safe] AVISO: scripts/injuries_apifootball_safe.py não encontrado — pulando injuries."
          fi

      # ========== CARTÃO ==========
      - name: Build cartão
        run: |
          if [ -f "scripts/build_cartao.py" ]; then
            python scripts/build_cartao.py --rodada "${OUT_DIR}"
          else
            echo "[cartao] ERRO: scripts/build_cartao.py não encontrado."
            exit 12
          fi

      # ========== KELLY ==========
      - name: Kelly publish
        run: |
          if [ -f "scripts/publish_kelly.py" ]; then
            python scripts/publish_kelly.py --rodada "${OUT_DIR}" --debug
          else
            echo "[kelly] AVISO: scripts/publish_kelly.py não encontrado — pulando Kelly."
          fi

      # ========== ARTEFATOS ==========
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ github.run_id }}
          path: |
            ${{ env.OUT_DIR }}/odds_theoddsapi.csv
            ${{ env.OUT_DIR }}/unmatched_theoddsapi.csv
            ${{ env.OUT_DIR }}/odds_apifootball.csv
            ${{ env.OUT_DIR }}/unmatched_apifootball.csv
            ${{ env.OUT_DIR }}/odds_consensus.csv
            ${{ env.OUT_DIR }}/predictions_market.csv
            ${{ env.OUT_DIR }}/news.csv
            ${{ env.OUT_DIR }}/injuries.csv
            ${{ env.OUT_DIR }}/loteca_cartao.txt
            ${{ env.OUT_DIR }}/predictions_xg_uni.csv
            ${{ env.OUT_DIR }}/predictions_xg_bi.csv
            ${{ env.OUT_DIR }}/predictions_calibrated.csv
            ${{ env.OUT_DIR }}/predictions_stacked.csv
            ${{ env.OUT_DIR }}/kelly_stakes.csv
            ${{ env.OUT_DIR }}/debug/**
          if-no-files-found: warn