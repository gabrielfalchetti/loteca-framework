name: End2End - Odds + API-Football + News + Kelly

on:
  workflow_dispatch:
    inputs:
      matches_path:
        description: "CSV com jogos (ex: data/in/matches_source.csv)"
        required: true
        default: "data/in/matches_source.csv"
      out_id:
        description: "Identificador único da rodada (ex: 18296084442)"
        required: true
        default: ""
      match_date:
        description: "Data dos jogos YYYY-MM-DD (opcional se o CSV tiver coluna date)"
        required: false
        default: ""
  push:
    paths:
      - ".github/workflows/end2end-odds-news-ml.yml"
      - "scripts/**"
      - "data/in/**"
      - "requirements.txt"

jobs:
  end2end:
    runs-on: ubuntu-24.04
    env:
      SEASON: ${{ vars.SEASON || '2025' }}
      REGIONS: ${{ vars.REGIONS || 'uk,eu,us,au' }}
      BANKROLL: ${{ vars.BANKROLL || '1000' }}
      KELLY_FRACTION: ${{ vars.KELLY_FRACTION || '0.5' }}
      KELLY_CAP: ${{ vars.KELLY_CAP || '0.1' }}
      ROUND_TO: ${{ vars.ROUND_TO || '1' }}
      KELLY_TOP_N: ${{ vars.KELLY_TOP_N || '14' }}
      DEBUG: ${{ vars.DEBUG || 'true' }}

      # APIs (defina em Secrets/Variables do Actions)
      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

      # Ligas do API-Football (ex.: Brasil A=71, Brasil B=72; Argentina A=128, PN=131)
      APIFOOT_LEAGUE_IDS: ${{ vars.APIFOOT_LEAGUE_IDS || '' }}

      # Entrada e saída
      MATCHES_PATH: ${{ github.event.inputs.matches_path || 'data/in/matches_source.csv' }}
      RODADA_ID: ${{ github.event.inputs.out_id || github.run_id }}
      OUT_DIR: data/out/${{ github.event.inputs.out_id || github.run_id }}
      MATCH_DATE: ${{ github.event.inputs.match_date || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Sanidade de insumos (CSV de jogos)
        run: |
          set -e
          if [ ! -f "${MATCHES_PATH}" ]; then
            echo "::error::Arquivo ${MATCHES_PATH} não encontrado"; exit 2
          fi
          echo "OK: ${MATCHES_PATH}"
          mkdir -p "${OUT_DIR}"

      - name: Login W&B (opcional)
        if: env.WANDB_API_KEY != ''
        run: |
          set -e
          python - << 'PY'
import os, subprocess
key=os.getenv("WANDB_API_KEY","").strip()
if key:
    subprocess.run(["wandb","login",key], check=False)
print("[wandb] pronto")
PY

      # 1) Coleta do API-Football (fixtures + odds + lineups + injuries + h2h + standings + stats)
      - name: API-Football - coleta completa
        run: |
          set -e
          [ -z "${X_RAPIDAPI_KEY}" ] && { echo "::error::X_RAPIDAPI_KEY ausente"; exit 2; }
          [ -z "${APIFOOT_LEAGUE_IDS}" ] && { echo "::error::APIFOOT_LEAGUE_IDS ausente"; exit 2; }
          python scripts/ingest_apifootball_all_safe.py \
            --out-dir "${OUT_DIR}" \
            --matches "${MATCHES_PATH}" \
            --season "${SEASON}" \
            --leagues "${APIFOOT_LEAGUE_IDS}" \
            ${MATCH_DATE:+--date "${MATCH_DATE}"} \
            --debug
          echo "Prévia fixtures:"
          head -n 20 "${OUT_DIR}/apifoot_fixtures.csv" || true
          echo "Prévia odds:"
          head -n 20 "${OUT_DIR}/apifoot_odds.csv" || true

      # 2) TheOddsAPI (opcional, mas entra no consenso se disponível)
      - name: TheOddsAPI - ingestão segura
        if: env.THEODDS_API_KEY != ''
        run: |
          set -e
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            --debug
          echo "Prévia theodds:"
          head -n 20 "${OUT_DIR}/odds_theoddsapi.csv" || true

      # 3) News (opcional; não bloqueia, mas registra)
      - name: News ingest (opcional)
        if: env.NEWSAPI_KEY != ''
        run: |
          set -e
          python scripts/news_ingest_safe.py --out-dir "${OUT_DIR}" || true
          head -n 5 "${OUT_DIR}/news.csv" || true

      # 4) Consenso de odds (usa apifoot_odds + theodds se houver)
      - name: Consolidar odds (consenso)
        run: |
          set -e
          python -m scripts.consensus_odds_safe --rodada "${OUT_DIR}"
          echo "==== odds_consensus.csv (preview) ===="
          head -n 30 "${OUT_DIR}/odds_consensus.csv" || true
          echo "======================================"

      # 5) Predição (baseline por odds)
      - name: Prever por odds
        run: |
          set -e
          python scripts/predict_from_odds.py --rodada "${OUT_DIR}" --debug
          head -n 20 "${OUT_DIR}/predictions_market.csv" || true

      # 6) Kelly (apostas recomendadas)
      - name: Publicar Kelly
        run: |
          set -e
          python scripts/publish_kelly.py --rodada "${OUT_DIR}" --debug
          head -n 20 "${OUT_DIR}/kelly_stakes.csv" || true

      # 7) Montar Cartão Loteca (só depois de tudo)
      - name: Montar cartão Loteca
        run: |
          set -e
          python scripts/build_cartao.py --rodada "${OUT_DIR}" --debug
          cat "${OUT_DIR}/loteca_cartao.txt" || true

      - name: Artefatos
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ env.RODADA_ID }}
          path: |
            ${{ env.OUT_DIR }}/**