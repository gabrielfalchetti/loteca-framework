name: end2end-odds-news-ml

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "Motivo do disparo (opcional)"
        required: false
        default: "manual"
  schedule:
    - cron: "0 12 * * *"  # diário 09:00 BRT ~ 12:00 UTC

env:
  # Configs globais
  SEASON: "2025"
  REGIONS: "uk,eu,us,au"
  BANKROLL: "1000"
  KELLY_FRACTION: "0.5"
  KELLY_CAP: "0.1"
  ROUND_TO: "1"
  KELLY_TOP_N: "14"
  DEBUG: "true"

  # Chaves (defina nos Secrets/Variables do repo)
  THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
  X_RAPIDAPI_KEY:  ${{ secrets.X_RAPIDAPI_KEY }}
  NEWSAPI_KEY:     ${{ secrets.NEWSAPI_KEY }}
  WANDB_API_KEY:   ${{ secrets.WANDB_API_KEY }}

  # Ligas API-Football; deixe vazio para desabilitar
  APIFOOT_LEAGUE_IDS: ${{ vars.APIFOOT_LEAGUE_IDS }}

jobs:
  end2end:
    runs-on: ubuntu-24.04
    name: end2end

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Set run paths (OUT_DIR and RODADA_ID)
        run: |
          set -e
          RODADA_ID="${GITHUB_RUN_ID}"
          OUT_DIR="data/out/${RODADA_ID}"
          mkdir -p "${OUT_DIR}"
          echo "RODADA_ID=${RODADA_ID}" >> $GITHUB_ENV
          echo "OUT_DIR=${OUT_DIR}" >> $GITHUB_ENV
          echo "RODADA_ID=${RODADA_ID}"
          echo "OUT_DIR=${OUT_DIR}"

      - name: Validate input (data/in/matches_source.csv)
        run: |
          set -e
          FILE="data/in/matches_source.csv"
          if [ ! -f "$FILE" ]; then
            echo "::error::Arquivo $FILE não encontrado. Crie-o com as colunas: home,away"
            exit 2
          fi
          header="$(head -n1 "$FILE" | tr -d '\r')"
          if [ "$header" != "home,away" ]; then
            echo "::error::Cabeçalho inválido em $FILE. Esperado: home,away ; Encontrado: $header"
            exit 2
          fi
          echo "Entrada OK: $FILE"

      - name: Optional login to Weights & Biases
        if: ${{ env.WANDB_API_KEY != '' }}
        run: |
          set -e
          python - << 'PY'
          import os, subprocess
          key = os.environ.get("WANDB_API_KEY","")
          if key:
              subprocess.run(["wandb","login",key], check=False)
              print("[wandb] login attempted")
          PY

      # ============ Odds - TheOddsAPI (principal) ============
      - name: Ingest TheOddsAPI
        run: |
          set -e
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            --debug
          echo "Preview odds_theoddsapi.csv:"
          head -n 20 "${OUT_DIR}/odds_theoddsapi.csv" || true

      # ============ Odds - API-Football (opcional) ============
      - name: Ingest API-Football (enabled only if keys/leagues set)
        if: ${{ env.X_RAPIDAPI_KEY != '' && env.APIFOOT_LEAGUE_IDS != '' }}
        run: |
          set -e
          echo "[apifootball] leagues=${APIFOOT_LEAGUE_IDS}"
          python -m scripts.ingest_odds_apifootball_rapidapi \
            --rodada "${OUT_DIR}" \
            --season "${SEASON}" \
            --leagues "${APIFOOT_LEAGUE_IDS}" \
            --debug || {
              echo "::warning::API-Football falhou. Continuando com demais fontes."
            }
          echo "Preview odds_apifootball.csv (se gerado):"
          head -n 20 "${OUT_DIR}/odds_apifootball.csv" || true

      - name: API-Football disabled notice
        if: ${{ env.X_RAPIDAPI_KEY == '' || env.APIFOOT_LEAGUE_IDS == '' }}
        run: |
          echo "[apifootball] desabilitado (sem X_RAPIDAPI_KEY ou APIFOOT_LEAGUE_IDS)."

      # ============ Consenso de Odds ============
      - name: Consensus Odds
        run: |
          set -e
          found=0
          [ -s "${OUT_DIR}/odds_theoddsapi.csv" ] && found=1
          [ -s "${OUT_DIR}/odds_apifootball.csv" ] && found=1
          if [ "$found" -eq 0 ]; then
            echo "::error::Nenhuma fonte de odds disponível (theoddsapi/apifootball)."
            exit 3
          fi
          python -m scripts.consensus_odds_safe --rodada "${OUT_DIR}"
          echo "==== odds_consensus.csv (preview) ===="
          head -n 20 "${OUT_DIR}/odds_consensus.csv" || true
          echo "======================================"

      # ============ Predição ============
      - name: Predict from Market Odds
        run: |
          set -e
          python scripts/predict_from_odds.py --rodada "${OUT_DIR}" --debug
          echo "==== predictions_market.csv (preview) ===="
          head -n 20 "${OUT_DIR}/predictions_market.csv" || true

      # ============ News (opcional, resiliente) ============
      - name: Ingest News (optional)
        if: ${{ env.NEWSAPI_KEY != '' }}
        run: |
          set -e
          if [ -f "scripts/news_ingest_safe.py" ]; then
            python scripts/news_ingest_safe.py || echo "::warning::Falha news_ingest_safe.py (continuando)"
            echo "Preview news.csv:"
            head -n 5 "${OUT_DIR}/news.csv" || true
          else
            echo "[news] script não encontrado — pulando."
          fi

      # ============ Injuries (opcional, resiliente) ============
      - name: Injuries via API-Football (optional)
        if: ${{ env.X_RAPIDAPI_KEY != '' }}
        run: |
          set -e
          if [ -f "scripts/injuries_apifootball_safe.py" ]; then
            python scripts/injuries_apifootball_safe.py || echo "::warning::Falha injuries (continuando)"
            echo "Preview injuries.csv:"
            head -n 10 "${OUT_DIR}/injuries.csv" || true
          else
            echo "[injuries] script não encontrado — pulando."
          fi

      # ============ Kelly ============
      - name: Kelly publish
        run: |
          set -e
          python scripts/publish_kelly.py --rodada "${OUT_DIR}" --debug
          echo "==== kelly_stakes.csv (preview) ===="
          head -n 20 "${OUT_DIR}/kelly_stakes.csv" || true

      # ============ Cartão Loteca (depois de tudo) ============
      - name: Build Loteca Card
        run: |
          set -e
          python scripts/build_cartao.py --rodada "${OUT_DIR}" --debug
          echo "==== loteca_cartao.txt ===="
          cat "${OUT_DIR}/loteca_cartao.txt" || true

      # ============ Sanity / Reality (hard fail se faltar algo vital) ============
      - name: Sanity and Reality Check
        run: |
          set -e
          python scripts/sanity_reality_check.py --rodada "${OUT_DIR}" --strict

      # ============ Artifacts ============
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ env.RODADA_ID }}
          path: |
            ${{ env.OUT_DIR }}/odds_theoddsapi.csv
            ${{ env.OUT_DIR }}/odds_apifootball.csv
            ${{ env.OUT_DIR }}/odds_consensus.csv
            ${{ env.OUT_DIR }}/predictions_market.csv
            ${{ env.OUT_DIR }}/kelly_stakes.csv
            ${{ env.OUT_DIR }}/loteca_cartao.txt
            ${{ env.OUT_DIR }}/news.csv
            ${{ env.OUT_DIR }}/injuries.csv
            ${{ env.OUT_DIR }}/debug/**
          if-no-files-found: warn