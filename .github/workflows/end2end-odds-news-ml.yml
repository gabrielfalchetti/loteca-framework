name: end2end

on:
  workflow_dispatch:
    inputs:
      RODADA:
        description: "Rodada ex.: 2025-10-04_1214 (usa a data YYYY-MM-DD no começo)"
        required: true
      SEASON:
        description: "Temporada ex.: 2025"
        required: true

jobs:
  end2end:
    runs-on: ubuntu-24.04
    env:
      RODADA: ${{ inputs.RODADA }}
      SEASON: ${{ inputs.SEASON }}
      REGIONS: uk,eu,us,au
      BANKROLL: 1000
      KELLY_FRACTION: 0.5
      KELLY_CAP: 0.1
      ROUND_TO: 1
      KELLY_TOP_N: 14
      DEBUG: true

      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

      # IDs das ligas na API-Football (configure em Settings > Variables do repo)
      APIFOOT_LEAGUE_IDS: ${{ vars.APIFOOT_LEAGUE_IDS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Export PYTHONPATH
        shell: bash
        run: echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      # ===============================
      # (A) matches_source.csv
      # ===============================
      - name: Generate matches_source.csv if missing (API-Football)
        shell: bash
        run: |
          set -e
          if [ ! -f "scripts/generate_matches_source_apifootball.py" ]; then
            echo "[generate] AVISO: script não encontrado — pulando geração."
            exit 0
          fi
          if [ -f "data/in/${RODADA}/matches_source.csv" ]; then
            echo "[generate] OK: matches_source.csv já existe."
            exit 0
          fi
          if [ -z "${X_RAPIDAPI_KEY}" ] || [ -z "${APIFOOT_LEAGUE_IDS}" ]; then
            echo "[generate] AVISO: falta X_RAPIDAPI_KEY ou APIFOOT_LEAGUE_IDS."
            exit 0
          fi
          python scripts/generate_matches_source_apifootball.py \
            --rodada "${RODADA}" \
            --season "${SEASON}" \
            --leagues "${APIFOOT_LEAGUE_IDS}" \
            --limit 14

      - name: Check matches_source.csv
        shell: bash
        run: |
          set -e
          if [ ! -f "data/in/${RODADA}/matches_source.csv" ]; then
            echo "ERRO: matches_source.csv não encontrado."
            exit 2
          fi
          echo "Entrada OK."

      # ===============================
      # (B) W&B opcional
      # ===============================
      - name: (Optional) wandb login
        shell: bash
        run: |
          if [ -n "${WANDB_API_KEY}" ]; then
            python -m wandb login "${WANDB_API_KEY}" --relogin || true
            echo "[wandb] login OK"
          else
            echo "[wandb] SKIP"
          fi

      # ===============================
      # (C) TheOddsAPI
      # ===============================
      - name: Ingest TheOddsAPI
        shell: bash
        run: |
          if [ -f "scripts/ingest_odds_theoddsapi_safe.py" ]; then
            python scripts/ingest_odds_theoddsapi_safe.py \
              --rodada "${RODADA}" \
              --regions "${REGIONS}" \
              --debug
          else
            echo "[theoddsapi] SKIP"
          fi

      # ===============================
      # (D) API-Football
      # ===============================
      - name: Ingest API-Football
        shell: bash
        run: |
          if [ -f "scripts/ingest_odds_apifootball_rapidapi_safe.py" ]; then
            python scripts/ingest_odds_apifootball_rapidapi_safe.py \
              --rodada "${RODADA}" \
              --season "${SEASON}" \
              --leagues "${APIFOOT_LEAGUE_IDS}" \
              --debug || true
          else
            echo "[apifootball] SKIP"
          fi

      # ===============================
      # (E) CONSENSO odds
      # ===============================
      - name: Consensus odds
        shell: bash
        run: |
          python -m scripts.consensus_odds_safe --rodada "${RODADA}"

      # ===============================
      # (F) PREDICT
      # ===============================
      - name: Predict from odds
        shell: bash
        run: |
          python scripts/predict_from_odds.py --rodada "${RODADA}" --debug

      # ===============================
      # (G) News ingest
      # ===============================
      - name: News ingest
        shell: bash
        run: |
          if [ -n "${NEWSAPI_KEY}" ]; then
            python scripts/news_ingest_safe.py
          else
            echo "[news] SKIP"
          fi

      # ===============================
      # (H) Injuries ingest
      # ===============================
      - name: Injuries ingest
        shell: bash
        run: |
          if [ -n "${X_RAPIDAPI_KEY}" ]; then
            python scripts/injuries_apifootball_safe.py
          else
            echo "[inj] SKIP"
          fi

      # ===============================
      # (I) Cartão
      # ===============================
      - name: Build cartão
        shell: bash
        run: |
          python scripts/build_cartao.py --rodada "${RODADA}"

      # ===============================
      # (J) Kelly
      # ===============================
      - name: Kelly staking
        shell: bash
        run: |
          python scripts/publish_kelly.py --rodada "${RODADA}" --debug

      # ===============================
      # (K) Reality check
      # ===============================
      - name: Reality check
        shell: bash
        run: |
          python scripts/sanity_reality_check.py --rodada "${RODADA}" --strict || true

      # ===============================
      # (L) Upload artifacts
      # ===============================
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ env.RODADA }}
          path: |
            data/out/${{ env.RODADA }}/**
          if-no-files-found: warn