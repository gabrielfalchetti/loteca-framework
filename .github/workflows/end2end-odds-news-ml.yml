name: end2end

on:
  workflow_dispatch:
    inputs:
      RODADA:
        description: "Identificador da rodada (ex: 2025-09-27_1213)"
        required: true
        type: string
      SEASON:
        description: "Temporada (ex: 2025)"
        required: true
        default: "2025"
        type: string
      REGIONS:
        description: "Regiões TheOddsAPI (uk,eu,us,au)"
        required: true
        default: "uk,eu,us,au"
        type: string
      BANKROLL:
        description: "Bankroll inicial"
        required: true
        default: "1000"
        type: string
      KELLY_FRACTION:
        description: "Fração de Kelly (0–1)"
        required: true
        default: "0.5"
        type: string
      KELLY_CAP:
        description: "Teto de Kelly por aposta (0–1)"
        required: true
        default: "0.1"
        type: string
      MIN_STAKE:
        description: "Aposta mínima"
        required: true
        default: "0"
        type: string
      MAX_STAKE:
        description: "Aposta máxima (0 = sem teto)"
        required: true
        default: "0"
        type: string
      ROUND_TO:
        description: "Arredondar stake (ex: 1)"
        required: true
        default: "1"
        type: string
      KELLY_TOP_N:
        description: "Qtde de picks no cartão"
        required: true
        default: "14"
        type: string

jobs:
  end2end:
    runs-on: ubuntu-24.04
    env:
      # Inputs
      RODADA: ${{ inputs.RODADA }}
      SEASON: ${{ inputs.SEASON }}
      REGIONS: ${{ inputs.REGIONS }}
      BANKROLL: ${{ inputs.BANKROLL }}
      KELLY_FRACTION: ${{ inputs.KELLY_FRACTION }}
      KELLY_CAP: ${{ inputs.KELLY_CAP }}
      MIN_STAKE: ${{ inputs.MIN_STAKE }}
      MAX_STAKE: ${{ inputs.MAX_STAKE }}
      ROUND_TO: ${{ inputs.ROUND_TO }}
      KELLY_TOP_N: ${{ inputs.KELLY_TOP_N }}

      # Variáveis/Segredos
      DEBUG: true
      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
      # Ex.: "71,72" (Série A e B). Configure em Repository Variables.
      APIFOOT_LEAGUE_IDS: ${{ vars.APIFOOT_LEAGUE_IDS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Export PYTHONPATH
        shell: bash
        run: echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Verifica entrada (matches_source.csv)
        shell: bash
        run: |
          set -e
          if [ ! -f "data/in/${RODADA}/matches_source.csv" ]; then
            echo "ERRO: data/in/${RODADA}/matches_source.csv não encontrado"
            exit 2
          fi
          echo "Entrada OK: data/in/${RODADA}/matches_source.csv"

      - name: Checa chaves
        shell: bash
        run: |
          set -e
          [ -z "${THEODDS_API_KEY}" ] && echo "AVISO: THEODDS_API_KEY ausente (TheOddsAPI será pulado)." || echo "THEODDS_API_KEY: OK"
          [ -z "${X_RAPIDAPI_KEY}" ] && echo "AVISO: X_RAPIDAPI_KEY ausente (API-Football será pulado)." || echo "X_RAPIDAPI_KEY: OK"
          [ -z "${NEWSAPI_KEY}" ] && echo "AVISO: NEWSAPI_KEY ausente (News será pulado)." || echo "NEWSAPI_KEY: OK"

      - name: (opcional) Login Weights & Biases
        if: env.WANDB_API_KEY != ''
        shell: bash
        run: |
          set -e
          python -m wandb login "${WANDB_API_KEY}" --relogin || true
          echo "[wandb] login executado"

      # =============== INGEST ===============
      - name: Ingest TheOddsAPI (safe)
        if: env.THEODDS_API_KEY != ''
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ingest_odds_theoddsapi_safe.py" ]; then
            python scripts/ingest_odds_theoddsapi_safe.py \
              --rodada "${RODADA}" \
              --regions "${REGIONS}" \
              ${EXTRA}
          else
            echo "[theoddsapi-safe] AVISO: scripts/ingest_odds_theoddsapi_safe.py não encontrado — pulando."
          fi

      - name: Ingest API-Football (odds via RapidAPI) — safe
        if: env.X_RAPIDAPI_KEY != '' && env.APIFOOT_LEAGUE_IDS != ''
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ingest_odds_apifootball_rapidapi_safe.py" ]; then
            python scripts/ingest_odds_apifootball_rapidapi_safe.py \
              --rodada "${RODADA}" \
              --season "${SEASON}" \
              --leagues "${APIFOOT_LEAGUE_IDS}" \
              ${EXTRA} || true
          elif [ -f "scripts/ingest_odds_apifootball_rapidapi.py" ]; then
            python -m scripts.ingest_odds_apifootball_rapidapi \
              --rodada "${RODADA}" \
              --season "${SEASON}" \
              --window 2 \
              --fuzzy 0.90 \
              --aliases data/aliases_br.json \
              ${EXTRA} || true
          else
            echo "[apifootball-safe] AVISO: script de ingestão não encontrado — pulando."
          fi

      - name: Consenso de Odds (aceita 1 provedor)
        shell: bash
        run: |
          set -e
          if python -c "import importlib.util; import sys; sys.exit(0 if importlib.util.find_spec('scripts.consensus_odds_safe') else 1)"; then
            python -m scripts.consensus_odds_safe --rodada "${RODADA}"
          else
            echo "[consensus-safe] ERRO: módulo scripts.consensus_odds_safe não encontrado."
            exit 10
          fi

      # =============== PREVISÃO DE MERCADO ===============
      - name: Predição a partir das odds de mercado
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/predict_from_odds.py" ]; then
            python scripts/predict_from_odds.py --rodada "${RODADA}" ${EXTRA}
          else
            echo "[predict] ERRO: scripts/predict_from_odds.py não encontrado."
            exit 11
          fi

      # =============== NEWS / INJURIES ===============
      - name: News ingest (NewsAPI)
        if: env.NEWSAPI_KEY != ''
        shell: bash
        run: |
          set -e
          if [ -f "scripts/news_ingest_safe.py" ]; then
            python scripts/news_ingest_safe.py
          else
            echo "[news-safe] AVISO: scripts/news_ingest_safe.py não encontrado — pulando news."
          fi

      - name: Injuries (API-Football)
        if: env.X_RAPIDAPI_KEY != '' && env.APIFOOT_LEAGUE_IDS != ''
        shell: bash
        run: |
          set -e
          if [ -f "scripts/injuries_apifootball_safe.py" ]; then
            python scripts/injuries_apifootball_safe.py
          else
            echo "[injuries-safe] AVISO: scripts/injuries_apifootball_safe.py não encontrado — pulando injuries."
          fi

      # =============== ML (XG / CALIBRAÇÃO / STACKING) ===============
      - name: ML — XG Univariado
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ml_xg_univariado.py" ]; then
            python scripts/ml_xg_univariado.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_xg_univariado.py não encontrado — pulando XG uni."
          fi

      - name: ML — XG Bivariado
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ml_xg_bivariado.py" ]; then
            python scripts/ml_xg_bivariado.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_xg_bivariado.py não encontrado — pulando XG bi."
          fi

      - name: ML — Calibração Isotônica
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ml_calibracao_isotonica.py" ]; then
            python scripts/ml_calibracao_isotonica.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_calibracao_isotonica.py não encontrado — pulando calibração."
          fi

      - name: ML — Stacking Bivariado
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ml_stacking_bivariado.py" ]; then
            python scripts/ml_stacking_bivariado.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_stacking_bivariado.py não encontrado — pulando stacking."
          fi

      # =============== CARTÃO / KELLY ===============
      - name: Monta cartão Loteca
        shell: bash
        run: |
          set -e
          if [ -f "scripts/build_cartao.py" ]; then
            python scripts/build_cartao.py --rodada "${RODADA}"
          else
            echo "[cartao] ERRO: scripts/build_cartao.py não encontrado."
            exit 12
          fi

      - name: Publica Kelly
        shell: bash
        env:
          BANKROLL: ${{ env.BANKROLL }}
          KELLY_FRACTION: ${{ env.KELLY_FRACTION }}
          KELLY_CAP: ${{ env.KELLY_CAP }}
          MIN_STAKE: ${{ env.MIN_STAKE }}
          MAX_STAKE: ${{ env.MAX_STAKE }}
          ROUND_TO: ${{ env.ROUND_TO }}
          KELLY_TOP_N: ${{ env.KELLY_TOP_N }}
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/publish_kelly.py" ]; then
            python scripts/publish_kelly.py --rodada "${RODADA}" ${EXTRA}
          else
            echo "[kelly] AVISO: scripts/publish_kelly.py não encontrado — pulando Kelly."
          fi

      # =============== ARTEFATOS ===============
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ env.RODADA }}
          path: |
            data/out/${{ env.RODADA }}/odds_theoddsapi.csv
            data/out/${{ env.RODADA }}/unmatched_theoddsapi.csv
            data/out/${{ env.RODADA }}/odds_apifootball.csv
            data/out/${{ env.RODADA }}/unmatched_apifootball.csv
            data/out/${{ env.RODADA }}/odds_consensus.csv
            data/out/${{ env.RODADA }}/predictions_market.csv
            data/out/${{ env.RODADA }}/news.csv
            data/out/${{ env.RODADA }}/injuries.csv
            data/out/${{ env.RODADA }}/loteca_cartao.txt
            data/out/${{ env.RODADA }}/predictions_xg_uni.csv
            data/out/${{ env.RODADA }}/predictions_xg_bi.csv
            data/out/${{ env.RODADA }}/predictions_calibrated.csv
            data/out/${{ env.RODADA }}/predictions_stacked.csv
            data/out/${{ env.RODADA }}/kelly_stakes.csv
            data/out/${{ env.RODADA }}/debug/**
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false