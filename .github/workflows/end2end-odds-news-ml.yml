name: End2End - Odds + News + ML

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  # ===== Configs gerais =====
  SEASON: 2025
  REGIONS: uk,eu,us,au
  BANKROLL: "1000"
  KELLY_FRACTION: "0.5"
  KELLY_CAP: "0.1"
  ROUND_TO: "1"
  KELLY_TOP_N: "14"
  DEBUG: "true"

  # ===== Coleta de odds (TheOddsAPI) =====
  # Ajuste conforme os jogos do dia. Para Argentina, mantenha estes:
  ODDS_SPORTS: soccer_argentina_primera_division,soccer_argentina_primera_nacional
  # Se for usar API-Football também, mantenha ou deixe vazio:
  APIFOOT_LEAGUE_IDS: ""

jobs:
  end2end:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # fallback mínimo
            pip install pandas requests rapidfuzz PyYAML numpy scikit-learn scipy tqdm wandb Unidecode
          fi

      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Ensure OUT_DIR and matches_source
        id: prep
        shell: bash
        run: |
          set -e
          OUT_DIR="data/out/${GITHUB_RUN_ID}"
          echo "OUT_DIR=${OUT_DIR}" >> $GITHUB_ENV
          mkdir -p "${OUT_DIR}"
          FILE="data/in/matches_source.csv"
          if [ ! -f "$FILE" ]; then
            echo "::error::Arquivo $FILE não encontrado. Crie data/in/matches_source.csv com colunas: home,away"
            exit 2
          fi
          echo "Entrada OK: $FILE"
          echo "Saída  OK: ${OUT_DIR}"

      - name: (Opcional) Login W&B
        if: env.WANDB_API_KEY != ''
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          python - << 'PY'
          import os, subprocess
          key = os.environ.get("WANDB_API_KEY","").strip()
          if key:
              import wandb
              print("[wandb] login executado")
          PY

      - name: Ingest odds - TheOddsAPI (safe)
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
        shell: bash
        run: |
          set -e
          if [ -z "${THEODDS_API_KEY}" ]; then
            echo "[theoddsapi-safe] AVISO: THEODDS_API_KEY ausente — pulando."
            exit 0
          fi
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            ${EXTRA}

      - name: Ingest odds - API-Football (opcional, tolera erro)
        if: env.X_RAPIDAPI_KEY != '' && env.APIFOOT_LEAGUE_IDS != ''
        continue-on-error: true
        env:
          X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
        shell: bash
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ingest_odds_apifootball_rapidapi.py" ]; then
            python -m scripts.ingest_odds_apifootball_rapidapi \
              --rodada "${OUT_DIR}" \
              --season "${SEASON}" \
              --window 2 \
              --leagues "${APIFOOT_LEAGUE_IDS}" \
              ${EXTRA}
          else
            echo "[apifootball-safe] AVISO: scripts/ingest_odds_apifootball_rapidapi.py não encontrado — pulando."
          fi

      - name: Consensus odds (safe)
        shell: bash
        run: |
          set -e
          if python -c "import importlib.util, sys; sys.exit(0 if importlib.util.find_spec('scripts.consensus_odds_safe') else 1)"; then
            python -m scripts.consensus_odds_safe --rodada "${OUT_DIR}"
          else
            echo "[consensus-safe] ERRO: módulo scripts.consensus_odds_safe não encontrado."
            exit 10
          fi

      - name: Predict from market odds
        shell: bash
        run: |
          set -e
          if [ -f "scripts/predict_from_odds.py" ]; then
            EXTRA=""
            [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
            python scripts/predict_from_odds.py --rodada "${OUT_DIR}" ${EXTRA}
          else
            echo "[predict] ERRO: scripts/predict_from_odds.py não encontrado."
            exit 11
          fi

      - name: Build Cartão Loteca
        shell: bash
        run: |
          set -e
          if [ -f "scripts/build_cartao.py" ]; then
            python scripts/build_cartao.py --rodada "${OUT_DIR}"
          else
            echo "[cartao] AVISO: scripts/build_cartao.py não encontrado — pulando cartão."
          fi

      - name: Kelly stakes
        shell: bash
        run: |
          set -e
          if [ -f "scripts/publish_kelly.py" ]; then
            EXTRA=""
            [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
            python scripts/publish_kelly.py --rodada "${OUT_DIR}" ${EXTRA}
          else
            echo "[kelly] AVISO: scripts/publish_kelly.py não encontrado — pulando Kelly."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ github.run_id }}
          path: |
            ${{ env.OUT_DIR }}/odds_theoddsapi.csv
            ${{ env.OUT_DIR }}/unmatched_theoddsapi.csv
            ${{ env.OUT_DIR }}/odds_apifootball.csv
            ${{ env.OUT_DIR }}/unmatched_apifootball.csv
            ${{ env.OUT_DIR }}/odds_consensus.csv
            ${{ env.OUT_DIR }}/predictions_market.csv
            ${{ env.OUT_DIR }}/news.csv
            ${{ env.OUT_DIR }}/injuries.csv
            ${{ env.OUT_DIR }}/loteca_cartao.txt
            ${{ env.OUT_DIR }}/predictions_xg_uni.csv
            ${{ env.OUT_DIR }}/predictions_xg_bi.csv
            ${{ env.OUT_DIR }}/predictions_calibrated.csv
            ${{ env.OUT_DIR }}/predictions_stacked.csv
            ${{ env.OUT_DIR }}/kelly_stakes.csv
            ${{ env.OUT_DIR }}/debug/**
          if-no-files-found: warn