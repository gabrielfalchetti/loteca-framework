name: "End2End - Odds + News + ML (SAFE-MIN)"

on:
  workflow_dispatch:
    inputs:
      SEASON:
        description: "Ano da temporada (ex.: 2025)"
        required: true
        default: "2025"

jobs:
  end2end:
    runs-on: ubuntu-24.04

    env:
      # ===== parâmetros =====
      SEASON: ${{ inputs.SEASON }}
      REGIONS: uk,eu,us,au
      BANKROLL: 1000
      KELLY_FRACTION: 0.5
      KELLY_CAP: 0.1
      ROUND_TO: 1
      KELLY_TOP_N: 14
      DEBUG: "true"

      # ===== chaves/segredos =====
      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

      # ===== ligas API-Football (ajuste se quiser) =====
      APIFOOT_LEAGUE_IDS: "71,72"

      # ===== saída única desta execução =====
      OUT_DIR: data/out/${{ github.run_id }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: "Configure env"
        run: |
          echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          mkdir -p "${OUT_DIR}"

      - name: "Prepare matches_source (aceita formato simples)"
        run: |
          set -e
          SIMPLE="data/in/matches_source.csv"
          DEST_DIR="data/in/${OUT_DIR}"
          DEST_FILE="${DEST_DIR}/matches_source.csv"

          if [ -f "$SIMPLE" ]; then
            mkdir -p "$DEST_DIR"
            cp "$SIMPLE" "$DEST_FILE"
            echo "Copiado: $SIMPLE -> $DEST_FILE"
          fi

          if [ ! -f "$DEST_FILE" ]; then
            echo "::error::Arquivo ${DEST_FILE} não encontrado. Crie data/in/matches_source.csv com colunas: home,away"
            exit 2
          fi

          python - <<'PY'
import sys, pandas as pd
f = sys.argv[1] if len(sys.argv)>1 else "${DEST_FILE}"
df = pd.read_csv(f)
need = {"home","away"}
missing = [c for c in need if c not in df.columns]
if missing:
    raise SystemExit(f"Header inválido em {f}. Faltando: {missing}")
print("matches_source OK:", f)
PY
          echo "Entrada OK: ${DEST_FILE}"

      - name: "W&B login (opcional)"
        run: |
          if [ -n "${WANDB_API_KEY}" ]; then
            wandb login "${WANDB_API_KEY}" || true
          else
            echo "[wandb] sem chave — pulando"
          fi

      # ================= INGEST =================
      - name: "Ingest odds - TheOddsAPI (SAFE)"
        run: |
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            --debug

      - name: "Ingest odds - API-Football RapidAPI (SAFE)"
        run: |
          python -m scripts.ingest_odds_apifootball_rapidapi \
            --rodada "${OUT_DIR}" \
            --season "${SEASON}" \
            --window 2 \
            --aliases data/aliases_br.json \
            --leagues "${APIFOOT_LEAGUE_IDS}" \
            --debug || echo "[apifootball-safe] prosseguindo (pode estar vazio)"

      - name: "Build consensus odds (SAFE)"
        run: |
          python -m scripts.consensus_odds_safe \
            --rodada "${OUT_DIR}"

      # ================= PREVISÃO =================
      - name: "Predict from market odds"
        run: |
          python scripts/predict_from_odds.py \
            --rodada "${OUT_DIR}" \
            --debug

      - name: "xG/Calib/Stack (opcional)"
        continue-on-error: true
        run: |
          for f in scripts/predict_xg_uni.py scripts/predict_xg_bi.py scripts/calibrate_predictions.py scripts/stack_predictions.py; do
            [ -f "$f" ] && python "$f" --rodada "${OUT_DIR}" --debug || true
          done

      # ================= NEWS/INJURIES =================
      - name: "News (opcional)"
        continue-on-error: true
        run: |
          [ -f scripts/news_ingest_safe.py ] && python scripts/news_ingest_safe.py || true

      - name: "Injuries (opcional)"
        continue-on-error: true
        run: |
          [ -f scripts/injuries_apifootball_safe.py ] && python scripts/injuries_apifootball_safe.py || true

      # ================= CARTÃO / KELLY =================
      - name: "Build Cartão Loteca"
        run: |
          python scripts/build_cartao.py --rodada "${OUT_DIR}"

      - name: "Publicar Kelly stakes"
        run: |
          python scripts/publish_kelly.py --rodada "${OUT_DIR}" --debug

      # ================= ARTEFATOS =================
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ github.run_id }}
          path: |
            ${{ env.OUT_DIR }}/**
            data/in/${{ env.OUT_DIR }}/matches_source.csv
          if-no-files-found: warn
