name: "End2End - Odds + News + ML (SAFE)"

on:
  workflow_dispatch:
    inputs:
      SEASON:
        description: "Ano da temporada (ex.: 2025)"
        required: true
        default: "2025"

jobs:
  end2end:
    runs-on: ubuntu-24.04

    env:
      SEASON: ${{ inputs.SEASON }}
      REGIONS: uk,eu,us,au
      BANKROLL: 1000
      KELLY_FRACTION: 0.5
      KELLY_CAP: 0.1
      ROUND_TO: 1
      KELLY_TOP_N: 14
      DEBUG: "true"

      THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

      # Ajuste se quiser incluir mais ligas da API-Football
      APIFOOT_LEAGUE_IDS: "71,72"

      # Pasta única de saída por execução
      OUT_DIR: data/out/${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure env/path
        run: |
          echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          mkdir -p "${OUT_DIR}"

      - name: Prepare matches_source (formato simples)
        run: |
          set -e
          SRC="data/in/matches_source.csv"
          DST_DIR="data/in/${OUT_DIR}"
          DST="${DST_DIR}/matches_source.csv"
          if [ -f "$SRC" ]; then
            mkdir -p "$DST_DIR"
            cp "$SRC" "$DST"
            echo "Copiado: $SRC -> $DST"
          else
            echo "::error::Crie $SRC com cabeçalho: home,away"
            exit 2
          fi

      - name: W&B login (opcional)
        run: |
          if [ -n "${WANDB_API_KEY}" ]; then
            wandb login "${WANDB_API_KEY}" || true
          else
            echo "[wandb] sem chave — pulando"
          fi

      # ================= INGEST =================
      - name: Ingest odds - TheOddsAPI (SAFE)
        run: |
          python scripts/ingest_odds_theoddsapi_safe.py \
            --rodada "${OUT_DIR}" \
            --regions "${REGIONS}" \
            --debug

      - name: Ingest odds - API-Football RapidAPI (SAFE)
        run: |
          python -m scripts.ingest_odds_apifootball_rapidapi \
            --rodada "${OUT_DIR}" \
            --season "${SEASON}" \
            --window 2 \
            --aliases data/aliases_br.json \
            --leagues "${APIFOOT_LEAGUE_IDS}" \
            --debug || echo "[apifootball-safe] prosseguindo (pode estar vazio)"

      - name: Build consensus odds (SAFE)
        run: |
          python -m scripts.consensus_odds_safe --rodada "${OUT_DIR}"

      # ================= PREVISÃO =================
      - name: Predict from market odds
        run: |
          python scripts/predict_from_odds.py --rodada "${OUT_DIR}" --debug

      - name: xG/Calib/Stack (opcional)
        continue-on-error: true
        run: |
          if [ -f scripts/predict_xg_uni.py ]; then python scripts/predict_xg_uni.py --rodada "${OUT_DIR}" --debug || true; fi
          if [ -f scripts/predict_xg_bi.py ]; then python scripts/predict_xg_bi.py --rodada "${OUT_DIR}" --debug || true; fi
          if [ -f scripts/calibrate_predictions.py ]; then python scripts/calibrate_predictions.py --rodada "${OUT_DIR}" --debug || true; fi
          if [ -f scripts/stack_predictions.py ]; then python scripts/stack_predictions.py --rodada "${OUT_DIR}" --debug || true; fi

      # ================= NEWS/INJURIES =================
      - name: News (opcional)
        continue-on-error: true
        run: |
          if [ -f scripts/news_ingest_safe.py ]; then python scripts/news_ingest_safe.py || true; fi

      - name: Injuries (opcional)
        continue-on-error: true
        run: |
          if [ -f scripts/injuries_apifootball_safe.py ]; then python scripts/injuries_apifootball_safe.py || true; fi

      # ================= CARTÃO / KELLY =================
      - name: Build Cartão Loteca
        run: |
          python scripts/build_cartao.py --rodada "${OUT_DIR}"

      - name: Publicar Kelly stakes
        run: |
          python scripts/publish_kelly.py --rodada "${OUT_DIR}" --debug

      # ================= ARTEFATOS =================
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ github.run_id }}
          path: |
            ${{ env.OUT_DIR }}/**
            data/in/${{ env.OUT_DIR }}/matches_source.csv
          if-no-files-found: warn
