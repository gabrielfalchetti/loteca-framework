name: end2end — odds + news + ml (integrado)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

env:
  # ======= Config base =======
  DEBUG: true
  RODADA: 2025-09-27_1213
  SEASON: 2025
  REGIONS: uk,eu,us,au

  # ======= Kelly & bankroll =======
  BANKROLL: 1000
  KELLY_FRACTION: 0.5
  KELLY_CAP: 0.1
  MIN_STAKE: 0
  MAX_STAKE: 0
  ROUND_TO: 1
  KELLY_TOP_N: 14

jobs:
  end2end:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      # ============= Sanidade de entrada =============
      - name: Check matches_source.csv
        run: |
          set -e
          if [ ! -f "data/in/${RODADA}/matches_source.csv" ]; then
            echo "ERRO: data/in/${RODADA}/matches_source.csv não encontrado"
            exit 2
          fi
          echo "Entrada OK: data/in/${RODADA}/matches_source.csv"

      - name: Check required secrets
        run: |
          set -e
          [ -z "${THEODDS_API_KEY}" ] && echo "AVISO: THEODDS_API_KEY ausente (TheOddsAPI será pulado)." || echo "THEODDS_API_KEY: OK"
          [ -z "${X_RAPIDAPI_KEY}" ] && echo "AVISO: X_RAPIDAPI_KEY ausente (API-Football será pulado)." || echo "X_RAPIDAPI_KEY: OK"
          [ -z "${NEWSAPI_KEY}" ] && echo "AVISO: NEWSAPI_KEY ausente (News será pulado)." || echo "NEWSAPI_KEY: OK"
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}
          X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
          NEWSAPI_KEY:   ${{ secrets.NEWSAPI_KEY }}

      - name: Login Weights & Biases (opcional)
        run: |
          set -e
          if [ -n "${WANDB_API_KEY}" ]; then
            python -m wandb login "${WANDB_API_KEY}" --relogin || true
            echo "[wandb] login executado"
          else
            echo "[wandb] AVISO: WANDB_API_KEY ausente — seguindo sem W&B."
          fi
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

      # ============= ODDS (TheOddsAPI - SAFE wrapper) =============
      - name: Odds — TheOddsAPI (safe)
        run: |
          set -e
          if [ -z "${THEODDS_API_KEY}" ]; then
            echo "[theoddsapi-safe] SKIP: THEODDS_API_KEY ausente."
            exit 0
          fi
          if [ -f "scripts/ingest_odds_theoddsapi_safe.py" ]; then
            EXTRA=""
            [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
            python scripts/ingest_odds_theoddsapi_safe.py \
              --rodada "${RODADA}" \
              --regions "${REGIONS}" \
              ${EXTRA}
          else
            echo "[theoddsapi-safe] AVISO: scripts/ingest_odds_theoddsapi_safe.py não encontrado — pulando."
          fi
        env:
          THEODDS_API_KEY: ${{ secrets.THEODDS_API_KEY }}

      # ============= ODDS (API-FOOTBALL via RapidAPI - SAFE) =============
      - name: Odds — API-Football RapidAPI (safe)
        run: |
          set -e
          if [ -z "${X_RAPIDAPI_KEY}" ]; then
            echo "[apifootball-safe] SKIP: X_RAPIDAPI_KEY ausente."
            exit 0
          fi
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/ingest_odds_apifootball_rapidapi_safe.py" ]; then
            python scripts/ingest_odds_apifootball_rapidapi_safe.py \
              --rodada "${RODADA}" \
              --season "${SEASON}" \
              ${EXTRA} || true
          elif [ -f "scripts/ingest_odds_apifootball_rapidapi.py" ]; then
            python -m scripts.ingest_odds_apifootball_rapidapi \
              --rodada "${RODADA}" \
              --season "${SEASON}" \
              --window 2 \
              --fuzzy 0.90 \
              --aliases data/aliases_br.json \
              ${EXTRA} || true
          else
            echo "[apifootball-safe] AVISO: script de ingestão não encontrado — pulando."
          fi
        env:
          X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}

      # ============= CONSENSUS DE ODDS (SAFE) =============
      - name: Odds — consenso (safe)
        run: |
          set -e
          if python -c "import importlib.util; import sys; sys.exit(0 if importlib.util.find_spec('scripts.consensus_odds_safe') else 1)"; then
            python -m scripts.consensus_odds_safe --rodada "${RODADA}"
          else
            echo "[consensus-safe] AVISO: módulo scripts.consensus_odds_safe não encontrado — pulando."
          fi

      # ============= NEWS (NEWSAPI - SAFE) =============
      - name: News — NewsAPI (safe)
        run: |
          set -e
          if [ -z "${NEWSAPI_KEY}" ]; then
            echo "[news-safe] SKIP: NEWSAPI_KEY ausente."
            exit 0
          fi
          if [ -f "scripts/news_ingest_safe.py" ]; then
            python scripts/news_ingest_safe.py
          else
            echo "[news-safe] AVISO: scripts/news_ingest_safe.py não encontrado — pulando news."
          fi
        env:
          NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}

      # ============= INJURIES (API-FOOTBALL via RapidAPI - SAFE) =============
      - name: Injuries — API-Football RapidAPI (safe)
        run: |
          set -e
          if [ -z "${X_RAPIDAPI_KEY}" ]; then
            echo "[injuries-safe] SKIP: X_RAPIDAPI_KEY ausente."
            exit 0
          fi
          if [ -f "scripts/injuries_apifootball_safe.py" ]; then
            python scripts/injuries_apifootball_safe.py
          else
            echo "[injuries-safe] AVISO: scripts/injuries_apifootball_safe.py não encontrado — pulando injuries."
          fi
        env:
          X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
          SEASON: ${{ env.SEASON }}
          APIFOOT_LEAGUE_ID: "71"

      # ============= ML — XGBoost Univariado =============
      - name: ML — XG Univariado (safe)
        run: |
          set -e
          if [ -f "scripts/ml_xg_univariado.py" ]; then
            EXTRA=""
            [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
            python scripts/ml_xg_univariado.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_xg_univariado.py não encontrado — pulando XG uni."
          fi

      # ============= ML — XGBoost Bivariado =============
      - name: ML — XG Bivariado (safe)
        run: |
          set -e
          if [ -f "scripts/ml_xg_bivariado.py" ]; then
            EXTRA=""
            [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
            python scripts/ml_xg_bivariado.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_xg_bivariado.py não encontrado — pulando XG bi."
          fi

      # ============= ML — Calibração Isotônica =============
      - name: ML — Calibração Isotônica (safe)
        run: |
          set -e
          if [ -f "scripts/ml_calibracao_isotonica.py" ]; then
            EXTRA=""
            [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
            python scripts/ml_calibracao_isotonica.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_calibracao_isotonica.py não encontrado — pulando calibração."
          fi

      # ============= ML — Stacking Bivariado =============
      - name: ML — Stacking Bivariado (safe)
        run: |
          set -e
          if [ -f "scripts/ml_stacking_bivariado.py" ]; then
            EXTRA=""
            [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
            python scripts/ml_stacking_bivariado.py --rodada "${RODADA}" --season "${SEASON}" ${EXTRA} || true
          else
            echo "[ml] AVISO: scripts/ml_stacking_bivariado.py não encontrado — pulando stacking."
          fi

      # ============= Cartão da Loteca (visual) =============
      - name: Cartão — build
        run: |
          set -e
          if [ -f "scripts/build_cartao.py" ]; then
            python scripts/build_cartao.py
          else
            echo "[cartao] AVISO: scripts/build_cartao.py não encontrado — pulando cartão."
          fi

      # ============= Kelly — sizing & publicação =============
      - name: Kelly — publish
        run: |
          set -e
          EXTRA=""
          [ "${DEBUG}" = "true" ] && EXTRA="--debug" || true
          if [ -f "scripts/publish_kelly.py" ]; then
            python scripts/publish_kelly.py --rodada "${RODADA}" ${EXTRA}
          else
            echo "[kelly] AVISO: scripts/publish_kelly.py não encontrado — pulando Kelly."
          fi
        env:
          BANKROLL:       ${{ env.BANKROLL }}
          KELLY_FRACTION: ${{ env.KELLY_FRACTION }}
          KELLY_CAP:      ${{ env.KELLY_CAP }}
          MIN_STAKE:      ${{ env.MIN_STAKE }}
          MAX_STAKE:      ${{ env.MAX_STAKE }}
          ROUND_TO:       ${{ env.ROUND_TO }}
          KELLY_TOP_N:    ${{ env.KELLY_TOP_N }}

      # ============= Upload de artifacts principais =============
      - name: Upload — artifacts integrados
        uses: actions/upload-artifact@v4
        with:
          name: loteca_full_${{ env.RODADA }}
          path: |
            data/out/${{ env.RODADA }}/odds_theoddsapi.csv
            data/out/${{ env.RODADA }}/unmatched_theoddsapi.csv
            data/out/${{ env.RODADA }}/odds_apifootball.csv
            data/out/${{ env.RODADA }}/unmatched_apifootball.csv
            data/out/${{ env.RODADA }}/odds_consensus.csv
            data/out/${{ env.RODADA }}/news.csv
            data/out/${{ env.RODADA }}/injuries.csv
            data/out/${{ env.RODADA }}/loteca_cartao.txt
            data/out/${{ env.RODADA }}/predictions_xg_uni.csv
            data/out/${{ env.RODADA }}/predictions_xg_bi.csv
            data/out/${{ env.RODADA }}/predictions_calibrated.csv
            data/out/${{ env.RODADA }}/predictions_stacked.csv
            data/out/${{ env.RODADA }}/kelly_stakes.csv
            data/out/${{ env.RODADA }}/debug/**
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
